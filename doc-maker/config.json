{
    "name": "Doc Maker",
    "version": "1.0.0",
    "description": "Word document automation integration using python-docx with markdown-first content creation. AI agents should use markdown syntax for most content creation - headings (#), paragraphs, lists (- or 1.), formatting (**bold**, *italic*), tables, blockquotes (>), and code blocks. Only use non-markdown actions for images, page breaks, or when you need direct table creation with structured data arrays.",
    "entry_point": "doc_maker.py",
    "actions": {
        "create_document": {
            "display_name": "Create Word Document",
            "description": "Create a new Word document with markdown content. This is the primary action for document creation. Use standard markdown syntax: # for headings (# H1, ## H2, ### H3, etc.), plain text for paragraphs, - for bullet lists, 1. for numbered lists, **bold**, *italic*, `code`, > for blockquotes, and markdown tables (| col1 | col2 |). The markdown is automatically converted to properly formatted Word elements with appropriate styles. Returns a unique document_id for use with other actions and the complete document file for stateless operation.",
            "input_schema": {
                "type": "object",
                "properties": {
                    "markdown_content": {
                        "type": "string",
                        "description": "Markdown content to convert to Word document format. Use standard markdown: # for headings, **bold**, *italic*, - for bullets, 1. for numbers, | tables |, > blockquotes, ```code blocks```"
                    },
                    "custom_filename": {
                        "type": "string",
                        "description": "Custom filename for the returned document file (optional, will auto-add .docx extension if missing)"
                    },
                    "files": {
                        "type": "array",
                        "description": "Optional template Word files to use as base",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the file"
                                },
                                "contentType": {
                                    "type": "string",
                                    "description": "The MIME type of the file"
                                },
                                "content": {
                                    "type": "string",
                                    "description": "The file content encoded as base64"
                                }
                            },
                            "required": ["name", "contentType", "content"]
                        }
                    }
                },
                "required": []
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "document_id": {
                        "type": "string",
                        "description": "Unique identifier for the created document"
                    },
                    "paragraph_count": {
                        "type": "integer",
                        "description": "Number of paragraphs in the document"
                    },
                    "markdown_processed": {
                        "type": "boolean",
                        "description": "Whether markdown content was processed"
                    },
                    "saved": {
                        "type": "boolean",
                        "description": "Whether the document was successfully saved"
                    },
                    "file_path": {
                        "type": "string",
                        "description": "Path where the document was saved"
                    },
                    "file": {
                        "type": "object",
                        "description": "The saved document file for streaming",
                        "properties": {
                            "content": {
                                "type": "string",
                                "description": "The file content encoded as base64"
                            },
                            "name": {
                                "type": "string",
                                "description": "The name of the file"
                            },
                            "contentType": {
                                "type": "string",
                                "description": "The content type of the file"
                            }
                        },
                        "required": ["content", "name", "contentType"]
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if file streaming failed"
                    }
                },
                "required": ["document_id", "paragraph_count", "markdown_processed", "saved", "file_path", "file"]
            }
        },
        "add_markdown_content": {
            "display_name": "Add Markdown Content",
            "description": "Parse and add markdown content to an existing Word document. Requires the current document file in the 'files' parameter. Use this to append additional content to documents created with create_document. All markdown syntax is supported: headings (#), formatting (**bold**, *italic*), lists (- bullets, 1. numbers), tables, blockquotes (>), code blocks (```), etc. Content is appended to the end of the document. Returns the updated document file.",
            "input_schema": {
                "type": "object",
                "properties": {
                    "document_id": {
                        "type": "string",
                        "description": "ID of the document to modify"
                    },
                    "markdown_content": {
                        "type": "string",
                        "description": "Markdown content to parse and add to the document. Use standard markdown syntax: # headings, **bold**, *italic*, - bullets, 1. numbers, | tables |, > blockquotes"
                    },
                    "files": {
                        "type": "array",
                        "description": "List of files including the current document file",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the file"
                                },
                                "contentType": {
                                    "type": "string",
                                    "description": "The MIME type of the file"
                                },
                                "content": {
                                    "type": "string",
                                    "description": "The file content encoded as base64"
                                }
                            },
                            "required": ["name", "contentType", "content"]
                        }
                    }
                },
                "required": ["document_id", "markdown_content"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "markdown_processed": {
                        "type": "boolean",
                        "description": "Whether markdown was successfully processed"
                    },
                    "elements_added": {
                        "type": "integer",
                        "description": "Number of elements added from markdown"
                    },
                    "saved": {
                        "type": "boolean",
                        "description": "Whether the document was successfully saved"
                    },
                    "file_path": {
                        "type": "string",
                        "description": "Path where the document was saved"
                    },
                    "file": {
                        "type": "object",
                        "description": "The saved document file for streaming",
                        "properties": {
                            "content": {
                                "type": "string",
                                "description": "The file content encoded as base64"
                            },
                            "name": {
                                "type": "string",
                                "description": "The name of the file"
                            },
                            "contentType": {
                                "type": "string",
                                "description": "The content type of the file"
                            }
                        },
                        "required": ["content", "name", "contentType"]
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if file streaming failed"
                    }
                },
                "required": ["markdown_processed", "elements_added", "saved", "file_path", "file"]
            }
        },
        "add_table": {
            "display_name": "Add Structured Table",
            "description": "Create a table in the document using structured data arrays. Requires the current document file in the 'files' parameter. Use this as an alternative to markdown tables when you have structured data in array format or need precise control over table dimensions. The data parameter should be a 2D array where each sub-array represents a row. First row is typically headers. Returns the updated document file.",
            "input_schema": {
                "type": "object",
                "properties": {
                    "document_id": {
                        "type": "string",
                        "description": "ID of the document to modify"
                    },
                    "rows": {
                        "type": "integer",
                        "description": "Number of table rows",
                        "minimum": 1
                    },
                    "cols": {
                        "type": "integer",
                        "description": "Number of table columns",
                        "minimum": 1
                    },
                    "data": {
                        "type": "array",
                        "description": "2D array of table data where each sub-array is a row",
                        "items": {
                            "type": "array",
                            "items": {"type": "string"}
                        }
                    },
                    "files": {
                        "type": "array",
                        "description": "List of files including the current document file",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {"type": "string"},
                                "contentType": {"type": "string"},
                                "content": {"type": "string"}
                            },
                            "required": ["name", "contentType", "content"]
                        }
                    }
                },
                "required": ["document_id", "rows", "cols"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "table_rows": {
                        "type": "integer",
                        "description": "Number of rows in the created table"
                    },
                    "table_cols": {
                        "type": "integer",
                        "description": "Number of columns in the created table"
                    },
                    "saved": {
                        "type": "boolean",
                        "description": "Whether the document was successfully saved"
                    },
                    "file_path": {
                        "type": "string",
                        "description": "Path where the document was saved"
                    },
                    "file": {
                        "type": "object",
                        "description": "The saved document file for streaming",
                        "properties": {
                            "content": {"type": "string", "description": "The file content encoded as base64"},
                            "name": {"type": "string", "description": "The name of the file"},
                            "contentType": {"type": "string", "description": "The content type of the file"}
                        },
                        "required": ["content", "name", "contentType"]
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if file streaming failed"
                    }
                },
                "required": ["table_rows", "table_cols", "saved", "file_path", "file"]
            }
        },
        "add_image": {
            "display_name": "Add Image",
            "description": "Insert an image into the document from uploaded files. Requires the current document file and image file in the 'files' parameter. The first image file found will be used. Supports PNG, JPG, JPEG, GIF, BMP, and WebP formats. Images cannot be added via markdown, so use this action for any image insertion. Specify width and/or height in inches to control sizing, or omit both for original size.",
            "input_schema": {
                "type": "object",
                "properties": {
                    "document_id": {
                        "type": "string",
                        "description": "ID of the document to modify"
                    },
                    "width": {
                        "type": "number",
                        "description": "Image width in inches (optional)"
                    },
                    "height": {
                        "type": "number",
                        "description": "Image height in inches (optional)"
                    },
                    "files": {
                        "type": "array",
                        "description": "List of files including the current document file and image file to add",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the file"
                                },
                                "contentType": {
                                    "type": "string",
                                    "description": "The MIME type of the file"
                                },
                                "content": {
                                    "type": "string",
                                    "description": "The file content encoded as base64"
                                }
                            },
                            "required": ["name", "contentType", "content"]
                        }
                    }
                },
                "required": ["document_id", "files"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "image_added": {
                        "type": "boolean",
                        "description": "Whether image was successfully added"
                    },
                    "saved": {
                        "type": "boolean",
                        "description": "Whether the document was successfully saved"
                    },
                    "file_path": {
                        "type": "string",
                        "description": "Path where the document was saved"
                    },
                    "file": {
                        "type": "object",
                        "description": "The saved document file for streaming",
                        "properties": {
                            "content": {"type": "string", "description": "The file content encoded as base64"},
                            "name": {"type": "string", "description": "The name of the file"},
                            "contentType": {"type": "string", "description": "The content type of the file"}
                        },
                        "required": ["content", "name", "contentType"]
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if file streaming failed"
                    }
                },
                "required": ["image_added", "saved", "file_path", "file"]
            }
        },
        "add_page_break": {
            "display_name": "Add Page Break",
            "description": "Insert a page break into the document to force content onto the next page. Requires the current document file in the 'files' parameter. Page breaks cannot be represented in standard markdown, so use this action when you need to control page layout. Returns the updated document file.",
            "input_schema": {
                "type": "object",
                "properties": {
                    "document_id": {
                        "type": "string",
                        "description": "ID of the document to modify"
                    },
                    "files": {
                        "type": "array",
                        "description": "List of files including the current document file",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {"type": "string"},
                                "contentType": {"type": "string"},
                                "content": {"type": "string"}
                            },
                            "required": ["name", "contentType", "content"]
                        }
                    }
                },
                "required": ["document_id"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "page_break_added": {
                        "type": "boolean",
                        "description": "Whether page break was successfully added"
                    },
                    "saved": {
                        "type": "boolean",
                        "description": "Whether the document was successfully saved"
                    },
                    "file_path": {
                        "type": "string",
                        "description": "Path where the document was saved"
                    },
                    "file": {
                        "type": "object",
                        "description": "The saved document file for streaming",
                        "properties": {
                            "content": {"type": "string", "description": "The file content encoded as base64"},
                            "name": {"type": "string", "description": "The name of the file"},
                            "contentType": {"type": "string", "description": "The content type of the file"}
                        },
                        "required": ["content", "name", "contentType"]
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if file streaming failed"
                    }
                },
                "required": ["page_break_added", "saved", "file_path", "file"]
            }
        },
        "get_document_elements": {
            "display_name": "Analyze Document Structure",
            "description": "Scan a document template and return all modifiable elements with their content and position indices. Use this to analyze templates before filling them. Automatically detects fillable elements like placeholders ({{field}}, [field], 'data here', etc.) and empty cells. Returns paragraph and table structure for precise template filling.",
            "input_schema": {
                "type": "object",
                "properties": {
                    "document_id": {
                        "type": "string",
                        "description": "ID of the document to analyze"
                    },
                    "include_content": {
                        "type": "boolean",
                        "description": "Whether to include full text content (default: true)",
                        "default": true
                    },
                    "files": {
                        "type": "array",
                        "description": "List of files including the document to analyze",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {"type": "string"},
                                "contentType": {"type": "string"},
                                "content": {"type": "string"}
                            },
                            "required": ["name", "contentType", "content"]
                        }
                    }
                },
                "required": ["document_id"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "total_elements": {"type": "integer", "description": "Total number of elements in document"},
                    "paragraphs": {"type": "integer", "description": "Number of paragraphs"},
                    "tables": {"type": "integer", "description": "Number of tables"},
                    "fillable_paragraphs": {"type": "integer", "description": "Number of paragraphs that appear to need filling"},
                    "fillable_cells": {"type": "integer", "description": "Number of table cells that appear to need filling"},
                    "elements": {
                        "type": "array",
                        "description": "Detailed information about each element",
                        "items": {
                            "type": "object",
                            "properties": {
                                "type": {"type": "string", "enum": ["paragraph", "table"]},
                                "index": {"type": "integer", "description": "Element index for position-based updates"},
                                "content": {"type": "string", "description": "Current text content"},
                                "is_fillable": {"type": "boolean", "description": "Whether element appears to be a placeholder"},
                                "length": {"type": "integer", "description": "Content length"}
                            }
                        }
                    }
                },
                "required": ["total_elements", "elements"]
            }
        },
        "update_by_position": {
            "display_name": "Update Elements by Position",
            "description": "Modify specific document elements by their position indices. Use get_document_elements first to find element positions. Supports updating paragraphs by index and table cells by table index + coordinates. Preserves original formatting while updating content.",
            "input_schema": {
                "type": "object",
                "properties": {
                    "document_id": {
                        "type": "string",
                        "description": "ID of the document to modify"
                    },
                    "updates": {
                        "type": "array",
                        "description": "List of position-based updates to apply",
                        "items": {
                            "type": "object",
                            "properties": {
                                "type": {"type": "string", "enum": ["paragraph", "table_cell"]},
                                "index": {"type": "integer", "description": "Paragraph index (for paragraph type)"},
                                "table_index": {"type": "integer", "description": "Table index (for table_cell type)"},
                                "row": {"type": "integer", "description": "Row index (for table_cell type)"},
                                "col": {"type": "integer", "description": "Column index (for table_cell type)"},
                                "content": {"type": "string", "description": "New content"}
                            }
                        }
                    },
                    "files": {
                        "type": "array",
                        "description": "List of files including the document to modify",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {"type": "string"},
                                "contentType": {"type": "string"},
                                "content": {"type": "string"}
                            },
                            "required": ["name", "contentType", "content"]
                        }
                    }
                },
                "required": ["document_id", "updates"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "updates_applied": {"type": "integer", "description": "Number of successful updates"},
                    "changes_made": {"type": "array", "items": {"type": "string"}, "description": "List of changes made"},
                    "saved": {"type": "boolean"},
                    "file_path": {"type": "string"},
                    "file": {"type": "object"}
                },
                "required": ["updates_applied", "changes_made", "saved", "file_path", "file"]
            }
        },
        "find_and_replace": {
            "display_name": "Find and Replace Text",
            "description": "Search for text patterns and replace them throughout the document. Works on both paragraphs and table cells. Supports case-sensitive and case-insensitive matching. Perfect for replacing natural language placeholders like 'data here', 'insert name', 'company info', etc.",
            "input_schema": {
                "type": "object",
                "properties": {
                    "document_id": {
                        "type": "string",
                        "description": "ID of the document to modify"
                    },
                    "replacements": {
                        "type": "array",
                        "description": "List of find/replace operations",
                        "items": {
                            "type": "object",
                            "properties": {
                                "find": {"type": "string", "description": "Text to find"},
                                "replace": {"type": "string", "description": "Text to replace with"}
                            },
                            "required": ["find", "replace"]
                        }
                    },
                    "case_sensitive": {
                        "type": "boolean",
                        "description": "Whether matching should be case-sensitive (default: false)",
                        "default": false
                    },
                    "files": {
                        "type": "array",
                        "description": "List of files including the document to modify",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {"type": "string"},
                                "contentType": {"type": "string"},
                                "content": {"type": "string"}
                            },
                            "required": ["name", "contentType", "content"]
                        }
                    }
                },
                "required": ["document_id", "replacements"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "total_replacements": {"type": "integer", "description": "Total number of replacements made"},
                    "replacements_processed": {"type": "integer", "description": "Number of replacement operations processed"},
                    "saved": {"type": "boolean"},
                    "file_path": {"type": "string"},
                    "file": {"type": "object"}
                },
                "required": ["total_replacements", "replacements_processed", "saved", "file_path", "file"]
            }
        },
        "fill_template_fields": {
            "display_name": "Fill Template Fields",
            "description": "Comprehensive template filling that supports multiple approaches: placeholder replacement ({{field}}), position-based updates, and search/replace for natural language placeholders. Works with any template format - rigid placeholders or natural language hints like 'data here', 'company name', etc. Use get_document_elements first to analyze the template structure.",
            "input_schema": {
                "type": "object",
                "properties": {
                    "document_id": {
                        "type": "string",
                        "description": "ID of the document to fill"
                    },
                    "template_data": {
                        "type": "object",
                        "description": "Template data in various formats",
                        "properties": {
                            "placeholder_data": {
                                "type": "object",
                                "description": "Key-value pairs for exact placeholder replacement ({{field}} → value)"
                            },
                            "position_data": {
                                "type": "object",
                                "description": "Position-based updates (paragraph_0 → content, table_0_row_1_col_2 → content)"
                            },
                            "search_replace": {
                                "type": "array",
                                "description": "Find and replace operations for natural language placeholders",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "find": {"type": "string", "description": "Text to find (e.g., 'data here')"},
                                        "replace": {"type": "string", "description": "Text to replace with"}
                                    },
                                    "required": ["find", "replace"]
                                }
                            }
                        }
                    },
                    "files": {
                        "type": "array",
                        "description": "List of files including the template document",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {"type": "string"},
                                "contentType": {"type": "string"},
                                "content": {"type": "string"}
                            },
                            "required": ["name", "contentType", "content"]
                        }
                    }
                },
                "required": ["document_id", "template_data"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "fields_filled": {"type": "integer", "description": "Number of successful field updates"},
                    "changes_made": {"type": "array", "items": {"type": "string"}, "description": "List of changes made"},
                    "template_processed": {"type": "boolean", "description": "Whether template was successfully processed"},
                    "saved": {"type": "boolean"},
                    "file_path": {"type": "string"},
                    "file": {"type": "object"}
                },
                "required": ["fields_filled", "changes_made", "template_processed", "saved", "file_path", "file"]
            }
        },
        "save_document": {
            "display_name": "Save Document",
            "description": "Save a document and return it as a base64-encoded file for download. The document is saved to memory and returned as streaming content - no physical file is created on the server. This is typically called automatically by other actions, but can be used standalone if needed.",
            "input_schema": {
                "type": "object",
                "properties": {
                    "document_id": {
                        "type": "string",
                        "description": "ID of the document to save"
                    },
                    "file_path": {
                        "type": "string",
                        "description": "Path where to save the document"
                    }
                },
                "required": ["document_id", "file_path"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "saved": {
                        "type": "boolean",
                        "description": "Whether the document was successfully saved"
                    },
                    "file_path": {
                        "type": "string",
                        "description": "Path where the document was saved"
                    },
                    "file": {
                        "type": "object",
                        "description": "The saved document file for streaming",
                        "properties": {
                            "content": {
                                "type": "string",
                                "description": "The file content encoded as base64"
                            },
                            "name": {
                                "type": "string",
                                "description": "The name of the file"
                            },
                            "contentType": {
                                "type": "string",
                                "description": "The content type of the file"
                            }
                        },
                        "required": ["content", "name", "contentType"]
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if save failed"
                    }
                },
                "required": ["saved", "file_path", "file"]
            }
        }
    }
}