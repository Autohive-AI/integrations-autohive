{
    "name": "Slide Maker",
    "version": "1.0.0",
    "description": "PowerPoint automation integration using python-pptx for creating, modifying, and extracting content from presentations",
    "entry_point": "slide_maker.py",
    "actions": {
        "create_presentation": {
            "display_name": "Create PowerPoint Presentation",
            "description": "Create a new PowerPoint presentation with optional template. If template files (*.pptx) are provided in the 'files' parameter, the first template found will be used. Otherwise, a blank presentation is created. If title/subtitle are provided (in markdown format), they will be added as text boxes on a blank slide with automatically calculated font sizes to ensure text fits. Supports inline markdown formatting: **bold**, *italic*, __underline__, `code`. Only blank slides are supported - all slides are created without predefined layouts or placeholders. Returns a unique presentation_id for use with other actions and the complete presentation file for stateless operation.",
            "input_schema": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "Title for the first slide in markdown format (supports **bold**, *italic*, etc.)"
                    },
                    "subtitle": {
                        "type": "string",
                        "description": "Subtitle for the first slide in markdown format (supports **bold**, *italic*, etc.)"
                    },
                    "files": {
                        "type": "array",
                        "description": "List of files to use",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the file"
                                },
                                "contentType": {
                                    "type": "string",
                                    "description": "The MIME type of the file"
                                },
                                "content": {
                                    "type": "string",
                                    "description": "The file content encoded as base64"
                                }
                            },
                            "required": ["name", "contentType", "content"]
                        }
                    },
                    "custom_filename": {
                        "type": "string",
                        "description": "Custom filename for the returned presentation file (optional, will auto-add .pptx extension if missing)"
                    }
                },
                "required": []
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "presentation_id": {
                        "type": "string",
                        "description": "Unique identifier for the created presentation"
                    },
                    "slide_count": {
                        "type": "integer",
                        "description": "Number of slides in the presentation"
                    },
                    "saved": {
                        "type": "boolean",
                        "description": "Whether the presentation was successfully saved"
                    },
                    "file_path": {
                        "type": "string",
                        "description": "Path where the presentation was saved"
                    },
                    "file": {
                        "type": "object",
                        "description": "The saved presentation file for streaming",
                        "properties": {
                            "content": {
                                "type": "string",
                                "description": "The file content encoded as base64"
                            },
                            "name": {
                                "type": "string",
                                "description": "The name of the file"
                            },
                            "contentType": {
                                "type": "string",
                                "description": "The content type of the file"
                            }
                        },
                        "required": ["content", "name", "contentType"]
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if file streaming failed"
                    }
                },
                "required": ["presentation_id", "slide_count", "saved", "file_path", "file"]
            }
        },
        "add_slide": {
            "display_name": "Add Blank Slide",
            "description": "Add a new blank slide to an existing presentation. Requires the current presentation file in the 'files' parameter. Only blank slides are supported - all slides are created without any predefined layout or placeholders. Use other actions like add_text, add_image, or add_bullet_list to add content to the slide. Returns the updated presentation file.",
            "input_schema": {
                "type": "object",
                "properties": {
                    "presentation_id": {
                        "type": "string",
                        "description": "ID of the presentation to modify"
                    },
                    "files": {
                        "type": "array",
                        "description": "List of files including the current presentation file",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the file"
                                },
                                "contentType": {
                                    "type": "string",
                                    "description": "The MIME type of the file"
                                },
                                "content": {
                                    "type": "string",
                                    "description": "The file content encoded as base64"
                                }
                            },
                            "required": ["name", "contentType", "content"]
                        }
                    }
                },
                "required": ["presentation_id"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "slide_index": {
                        "type": "integer",
                        "description": "Index of the newly added slide"
                    },
                    "slide_count": {
                        "type": "integer",
                        "description": "Total number of slides in presentation"
                    },
                    "saved": {
                        "type": "boolean",
                        "description": "Whether the presentation was successfully saved"
                    },
                    "file_path": {
                        "type": "string",
                        "description": "Path where the presentation was saved"
                    },
                    "file": {
                        "type": "object",
                        "description": "The saved presentation file for streaming",
                        "properties": {
                            "content": {
                                "type": "string",
                                "description": "The file content encoded as base64"
                            },
                            "name": {
                                "type": "string",
                                "description": "The name of the file"
                            },
                            "contentType": {
                                "type": "string",
                                "description": "The content type of the file"
                            }
                        },
                        "required": ["content", "name", "contentType"]
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if file streaming failed"
                    }
                },
                "required": ["slide_index", "slide_count", "saved", "file_path", "file"]
            }
        },
        "add_text": {
            "display_name": "Add Text",
            "description": "Add formatted text to a slide in a text box at the specified position. Text is always parsed as markdown - use **bold**, *italic*, __underline__, `code` for formatting. Font size is automatically calculated based on text length and box dimensions to prevent overflow while preserving all markdown formatting. Text wraps at box width. Returns the updated presentation file.",
            "input_schema": {
                "type": "object",
                "properties": {
                    "presentation_id": {
                        "type": "string",
                        "description": "ID of the presentation"
                    },
                    "slide_index": {
                        "type": "integer",
                        "description": "Index of the slide (0-based)"
                    },
                    "text": {
                        "type": "string",
                        "description": "Text content in markdown format. Use **bold**, *italic*, __underline__, `code` for formatting. Font size automatically calculated to fit box dimensions."
                    },
                    "color": {
                        "type": "string",
                        "description": "Text color in hex format (e.g., #FF0000 for red). Optional - defaults to black if not specified."
                    },
                    "position": {
                        "type": "object",
                        "properties": {
                            "left": {"type": "number", "description": "Left position in inches"},
                            "top": {"type": "number", "description": "Top position in inches"},
                            "width": {"type": "number", "description": "Width in inches"},
                            "height": {"type": "number", "description": "Height in inches"}
                        },
                        "required": ["left", "top", "width", "height"]
                    },
                    "files": {
                        "type": "array",
                        "description": "List of files including the current presentation file",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {"type": "string"},
                                "contentType": {"type": "string"},
                                "content": {"type": "string"}
                            },
                            "required": ["name", "contentType", "content"]
                        }
                    }
                },
                "required": ["presentation_id", "slide_index", "text", "position"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "shape_id": {
                        "type": "string",
                        "description": "ID of the created text shape"
                    },
                    "saved": {
                        "type": "boolean",
                        "description": "Whether the presentation was successfully saved"
                    },
                    "file_path": {
                        "type": "string",
                        "description": "Path where the presentation was saved"
                    },
                    "file": {
                        "type": "object",
                        "description": "The saved presentation file for streaming",
                        "properties": {
                            "content": {"type": "string", "description": "The file content encoded as base64"},
                            "name": {"type": "string", "description": "The name of the file"},
                            "contentType": {"type": "string", "description": "The content type of the file"}
                        },
                        "required": ["content", "name", "contentType"]
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if file streaming failed"
                    }
                },
                "required": ["shape_id", "saved", "file_path", "file"]
            }
        },
        "add_image": {
            "display_name": "Add Image",
            "description": "Insert an image into a slide from uploaded files. Provide the image file in the 'files' parameter - the first image file found will be used. Supports PNG, JPG, JPEG, GIF, and BMP formats.",
            "input_schema": {
                "type": "object",
                "properties": {
                    "presentation_id": {
                        "type": "string",
                        "description": "ID of the presentation"
                    },
                    "slide_index": {
                        "type": "integer",
                        "description": "Index of the slide (0-based)"
                    },
                    "position": {
                        "type": "object",
                        "properties": {
                            "left": {"type": "number", "description": "Left position in inches"},
                            "top": {"type": "number", "description": "Top position in inches"},
                            "width": {"type": "number", "description": "Width in inches (optional)"},
                            "height": {"type": "number", "description": "Height in inches (optional)"}
                        },
                        "required": ["left", "top"]
                    },
                    "files": {
                        "type": "array",
                        "description": "List of files including the current presentation file and image file",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the file"
                                },
                                "contentType": {
                                    "type": "string",
                                    "description": "The MIME type of the file"
                                },
                                "content": {
                                    "type": "string",
                                    "description": "The file content encoded as base64"
                                }
                            },
                            "required": ["name", "contentType", "content"]
                        }
                    }
                },
                "required": ["presentation_id", "slide_index", "position"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "shape_id": {
                        "type": "string",
                        "description": "ID of the created image shape"
                    },
                    "saved": {
                        "type": "boolean",
                        "description": "Whether the presentation was successfully saved"
                    },
                    "file_path": {
                        "type": "string",
                        "description": "Path where the presentation was saved"
                    },
                    "file": {
                        "type": "object",
                        "description": "The saved presentation file for streaming",
                        "properties": {
                            "content": {"type": "string", "description": "The file content encoded as base64"},
                            "name": {"type": "string", "description": "The name of the file"},
                            "contentType": {"type": "string", "description": "The content type of the file"}
                        },
                        "required": ["content", "name", "contentType"]
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if file streaming failed"
                    }
                },
                "required": ["shape_id", "saved", "file_path", "file"]
            }
        },
        "add_table": {
            "display_name": "Add Table",
            "description": "Create a table in a slide. Each cell value is parsed as markdown, allowing inline formatting like **bold**, *italic*, etc. Requires the current presentation file in the 'files' parameter. Returns the updated presentation file.",
            "input_schema": {
                "type": "object",
                "properties": {
                    "presentation_id": {
                        "type": "string",
                        "description": "ID of the presentation"
                    },
                    "slide_index": {
                        "type": "integer",
                        "description": "Index of the slide (0-based)"
                    },
                    "rows": {
                        "type": "integer",
                        "description": "Number of rows",
                        "minimum": 1
                    },
                    "cols": {
                        "type": "integer",
                        "description": "Number of columns",
                        "minimum": 1
                    },
                    "position": {
                        "type": "object",
                        "properties": {
                            "left": {"type": "number", "description": "Left position in inches"},
                            "top": {"type": "number", "description": "Top position in inches"},
                            "width": {"type": "number", "description": "Table width in inches"},
                            "height": {"type": "number", "description": "Table height in inches"}
                        },
                        "required": ["left", "top", "width", "height"]
                    },
                    "data": {
                        "type": "array",
                        "description": "2D array of table data. Each cell value is parsed as markdown (supports **bold**, *italic*, __underline__, etc.)",
                        "items": {
                            "type": "array",
                            "items": {"type": "string"}
                        }
                    },
                    "files": {
                        "type": "array",
                        "description": "List of files including the current presentation file",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {"type": "string"},
                                "contentType": {"type": "string"},
                                "content": {"type": "string"}
                            },
                            "required": ["name", "contentType", "content"]
                        }
                    }
                },
                "required": ["presentation_id", "slide_index", "rows", "cols", "position"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "table_id": {
                        "type": "string",
                        "description": "ID of the created table"
                    },
                    "saved": {
                        "type": "boolean",
                        "description": "Whether the presentation was successfully saved"
                    },
                    "file_path": {
                        "type": "string",
                        "description": "Path where the presentation was saved"
                    },
                    "file": {
                        "type": "object",
                        "description": "The saved presentation file for streaming",
                        "properties": {
                            "content": {"type": "string", "description": "The file content encoded as base64"},
                            "name": {"type": "string", "description": "The name of the file"},
                            "contentType": {"type": "string", "description": "The content type of the file"}
                        },
                        "required": ["content", "name", "contentType"]
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if file streaming failed"
                    }
                },
                "required": ["table_id", "saved", "file_path", "file"]
            }
        },
        "add_chart": {
            "display_name": "Add Chart",
            "description": "Create a chart in a slide. Requires the current presentation file in the 'files' parameter. Returns the updated presentation file.",
            "input_schema": {
                "type": "object",
                "properties": {
                    "presentation_id": {
                        "type": "string",
                        "description": "ID of the presentation"
                    },
                    "slide_index": {
                        "type": "integer",
                        "description": "Index of the slide (0-based)"
                    },
                    "chart_type": {
                        "type": "string",
                        "enum": ["column_clustered", "line", "pie", "bar_clustered", "area", "xy_scatter"],
                        "description": "Type of chart to create"
                    },
                    "position": {
                        "type": "object",
                        "properties": {
                            "left": {"type": "number", "description": "Left position in inches"},
                            "top": {"type": "number", "description": "Top position in inches"},
                            "width": {"type": "number", "description": "Chart width in inches"},
                            "height": {"type": "number", "description": "Chart height in inches"}
                        },
                        "required": ["left", "top", "width", "height"]
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "categories": {
                                "type": "array",
                                "items": {"type": "string"},
                                "description": "Chart categories/labels"
                            },
                            "series": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "name": {"type": "string"},
                                        "values": {
                                            "type": "array",
                                            "items": {"type": "number"}
                                        }
                                    },
                                    "required": ["name", "values"]
                                },
                                "description": "Chart data series"
                            }
                        },
                        "required": ["categories", "series"]
                    },
                    "files": {
                        "type": "array",
                        "description": "List of files including the current presentation file",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {"type": "string"},
                                "contentType": {"type": "string"},
                                "content": {"type": "string"}
                            },
                            "required": ["name", "contentType", "content"]
                        }
                    }
                },
                "required": ["presentation_id", "slide_index", "chart_type", "position", "data"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "chart_id": {
                        "type": "string",
                        "description": "ID of the created chart"
                    },
                    "saved": {
                        "type": "boolean",
                        "description": "Whether the presentation was successfully saved"
                    },
                    "file_path": {
                        "type": "string",
                        "description": "Path where the presentation was saved"
                    },
                    "file": {
                        "type": "object",
                        "description": "The saved presentation file for streaming",
                        "properties": {
                            "content": {"type": "string", "description": "The file content encoded as base64"},
                            "name": {"type": "string", "description": "The name of the file"},
                            "contentType": {"type": "string", "description": "The content type of the file"}
                        },
                        "required": ["content", "name", "contentType"]
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if file streaming failed"
                    }
                },
                "required": ["chart_id", "saved", "file_path", "file"]
            }
        },
        "extract_text": {
            "display_name": "Extract Text",
            "description": "Extract all text content from a presentation",
            "input_schema": {
                "type": "object",
                "properties": {
                    "file_path": {
                        "type": "string",
                        "description": "Path to the PowerPoint file"
                    }
                },
                "required": ["file_path"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "slides": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "slide_index": {"type": "integer"},
                                "text_content": {
                                    "type": "array",
                                    "items": {"type": "string"}
                                }
                            }
                        },
                        "description": "Text content from each slide"
                    },
                    "all_text": {
                        "type": "string",
                        "description": "All text content combined"
                    }
                },
                "required": ["slides", "all_text"]
            }
        },
        "modify_slide": {
            "display_name": "Modify Slide",
            "description": "Update content in an existing slide using text replacement. NOTE: For most text replacement needs, use find_and_replace instead - it's more powerful and works across all slides. Use modify_slide only for legacy compatibility or specific slide-scoped replacements. Replacement text is parsed as markdown for inline formatting. Requires the current presentation file in the 'files' parameter. Returns the updated presentation file.",
            "input_schema": {
                "type": "object",
                "properties": {
                    "presentation_id": {
                        "type": "string",
                        "description": "ID of the presentation"
                    },
                    "slide_index": {
                        "type": "integer",
                        "description": "Index of the slide to modify (0-based)"
                    },
                    "updates": {
                        "type": "object",
                        "properties": {
                            "title": {"type": "string", "description": "New title text"},
                            "replace_text": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "old_text": {"type": "string", "description": "Text to find"},
                                        "new_text": {"type": "string", "description": "Replacement text in markdown format (supports **bold**, *italic*, etc.)"}
                                    },
                                    "required": ["old_text", "new_text"]
                                },
                                "description": "Text replacements to make. Replacement text is parsed as markdown."
                            }
                        }
                    },
                    "files": {
                        "type": "array",
                        "description": "List of files including the current presentation file",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {"type": "string"},
                                "contentType": {"type": "string"},
                                "content": {"type": "string"}
                            },
                            "required": ["name", "contentType", "content"]
                        }
                    }
                },
                "required": ["presentation_id", "slide_index", "updates"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "modified": {
                        "type": "boolean",
                        "description": "Whether the slide was successfully modified"
                    },
                    "saved": {
                        "type": "boolean",
                        "description": "Whether the presentation was successfully saved"
                    },
                    "file_path": {
                        "type": "string",
                        "description": "Path where the presentation was saved"
                    },
                    "file": {
                        "type": "object",
                        "description": "The saved presentation file for streaming",
                        "properties": {
                            "content": {"type": "string", "description": "The file content encoded as base64"},
                            "name": {"type": "string", "description": "The name of the file"},
                            "contentType": {"type": "string", "description": "The content type of the file"}
                        },
                        "required": ["content", "name", "contentType"]
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if file streaming failed"
                    }
                },
                "required": ["modified", "saved", "file_path", "file"]
            }
        },
        "save_presentation": {
            "display_name": "Save Presentation",
            "description": "Save a presentation and return it as a base64-encoded file for download. The presentation is saved to memory and returned as streaming content - no physical file is created on the server.",
            "input_schema": {
                "type": "object",
                "properties": {
                    "presentation_id": {
                        "type": "string",
                        "description": "ID of the presentation to save"
                    },
                    "file_path": {
                        "type": "string",
                        "description": "Path where to save the presentation"
                    }
                },
                "required": ["presentation_id", "file_path"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "saved": {
                        "type": "boolean",
                        "description": "Whether the presentation was successfully saved"
                    },
                    "file_path": {
                        "type": "string",
                        "description": "Path where the presentation was saved"
                    },
                    "file": {
                        "type": "object",
                        "description": "The saved presentation file for streaming",
                        "properties": {
                            "content": {
                                "type": "string",
                                "description": "The file content encoded as base64"
                            },
                            "name": {
                                "type": "string",
                                "description": "The name of the file"
                            },
                            "contentType": {
                                "type": "string",
                                "description": "The content type of the file"
                            }
                        },
                        "required": ["content", "name", "contentType"]
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if file streaming failed"
                    }
                },
                "required": ["saved", "file_path", "file"]
            }
        },
        "set_text_autosize": {
            "display_name": "Set Text Autosize",
            "description": "Set automatic text sizing behavior for a text box or shape. Requires the current presentation file in the 'files' parameter. Use TEXT_TO_FIT_SHAPE to prevent text overflow by automatically reducing font size to fit within the shape boundaries. Use SHAPE_TO_FIT_TEXT to expand the shape to accommodate all text. Returns the updated presentation file.",
            "input_schema": {
                "type": "object",
                "properties": {
                    "presentation_id": {
                        "type": "string",
                        "description": "The presentation ID"
                    },
                    "slide_index": {
                        "type": "integer",
                        "description": "The slide index (0-based)"
                    },
                    "shape_index": {
                        "type": "integer",
                        "description": "The shape index (0-based)"
                    },
                    "autosize_type": {
                        "type": "string",
                        "enum": ["NONE", "SHAPE_TO_FIT_TEXT", "TEXT_TO_FIT_SHAPE"],
                        "description": "Type of automatic sizing: NONE (no auto-sizing), SHAPE_TO_FIT_TEXT (resize shape to fit text), TEXT_TO_FIT_SHAPE (resize text to fit shape)"
                    },
                    "word_wrap": {
                        "type": "boolean",
                        "description": "Whether to enable word wrapping (optional)"
                    },
                    "files": {
                        "type": "array",
                        "description": "List of files including the current presentation file",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {"type": "string"},
                                "contentType": {"type": "string"},
                                "content": {"type": "string"}
                            },
                            "required": ["name", "contentType", "content"]
                        }
                    }
                },
                "required": ["presentation_id", "slide_index", "shape_index", "autosize_type"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "Whether the operation was successful"
                    },
                    "autosize_type": {
                        "type": "string",
                        "description": "The autosize type that was set"
                    },
                    "word_wrap": {
                        "type": "boolean",
                        "description": "The current word wrap setting"
                    },
                    "saved": {
                        "type": "boolean",
                        "description": "Whether the presentation was successfully saved"
                    },
                    "file_path": {
                        "type": "string",
                        "description": "Path where the presentation was saved"
                    },
                    "file": {
                        "type": "object",
                        "description": "The saved presentation file for streaming",
                        "properties": {
                            "content": {"type": "string", "description": "The file content encoded as base64"},
                            "name": {"type": "string", "description": "The name of the file"},
                            "contentType": {"type": "string", "description": "The content type of the file"}
                        },
                        "required": ["content", "name", "contentType"]
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if file streaming failed"
                    }
                },
                "required": ["success", "autosize_type", "saved", "file_path", "file"]
            }
        },
        "fit_text_to_shape": {
            "display_name": "Fit Text to Shape",
            "description": "Automatically resize text to fit within the shape boundaries by reducing font size. Requires the current presentation file in the 'files' parameter. This prevents text overflow and ensures all content is visible. Specify max_size to control the maximum font size allowed (default: 48pt). Returns the updated presentation file.",
            "input_schema": {
                "type": "object",
                "properties": {
                    "presentation_id": {
                        "type": "string",
                        "description": "The presentation ID"
                    },
                    "slide_index": {
                        "type": "integer",
                        "description": "The slide index (0-based)"
                    },
                    "shape_index": {
                        "type": "integer",
                        "description": "The shape index (0-based)"
                    },
                    "max_size": {
                        "type": "number",
                        "description": "Maximum font size in points (default: 48)",
                        "minimum": 1,
                        "maximum": 144
                    },
                    "files": {
                        "type": "array",
                        "description": "List of files including the current presentation file",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {"type": "string"},
                                "contentType": {"type": "string"},
                                "content": {"type": "string"}
                            },
                            "required": ["name", "contentType", "content"]
                        }
                    }
                },
                "required": ["presentation_id", "slide_index", "shape_index"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "Whether the operation was successful"
                    },
                    "max_size": {
                        "type": "number",
                        "description": "The maximum font size used"
                    },
                    "auto_size": {
                        "type": "string",
                        "description": "The auto-sizing mode applied"
                    },
                    "saved": {
                        "type": "boolean",
                        "description": "Whether the presentation was successfully saved"
                    },
                    "file_path": {
                        "type": "string",
                        "description": "Path where the presentation was saved"
                    },
                    "file": {
                        "type": "object",
                        "description": "The saved presentation file for streaming",
                        "properties": {
                            "content": {"type": "string", "description": "The file content encoded as base64"},
                            "name": {"type": "string", "description": "The name of the file"},
                            "contentType": {"type": "string", "description": "The content type of the file"}
                        },
                        "required": ["content", "name", "contentType"]
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if file streaming failed"
                    }
                },
                "required": ["success", "max_size", "auto_size", "saved", "file_path", "file"]
            }
        },
        "set_text_margins": {
            "display_name": "Set Text Margins",
            "description": "Set the margins for a text box or shape. Requires the current presentation file in the 'files' parameter. Returns the updated presentation file.",
            "input_schema": {
                "type": "object",
                "properties": {
                    "presentation_id": {
                        "type": "string",
                        "description": "The presentation ID"
                    },
                    "slide_index": {
                        "type": "integer",
                        "description": "The slide index (0-based)"
                    },
                    "shape_index": {
                        "type": "integer",
                        "description": "The shape index (0-based)"
                    },
                    "margins": {
                        "type": "object",
                        "properties": {
                            "left": {
                                "type": "number",
                                "description": "Left margin in inches"
                            },
                            "right": {
                                "type": "number",
                                "description": "Right margin in inches"
                            },
                            "top": {
                                "type": "number",
                                "description": "Top margin in inches"
                            },
                            "bottom": {
                                "type": "number",
                                "description": "Bottom margin in inches"
                            }
                        },
                        "description": "Margin settings (at least one margin must be specified)"
                    },
                    "files": {
                        "type": "array",
                        "description": "List of files including the current presentation file",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {"type": "string"},
                                "contentType": {"type": "string"},
                                "content": {"type": "string"}
                            },
                            "required": ["name", "contentType", "content"]
                        }
                    }
                },
                "required": ["presentation_id", "slide_index", "shape_index", "margins"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "Whether the operation was successful"
                    },
                    "margins_set": {
                        "type": "object",
                        "description": "The margins that were set"
                    },
                    "saved": {
                        "type": "boolean",
                        "description": "Whether the presentation was successfully saved"
                    },
                    "file_path": {
                        "type": "string",
                        "description": "Path where the presentation was saved"
                    },
                    "file": {
                        "type": "object",
                        "description": "The saved presentation file for streaming",
                        "properties": {
                            "content": {"type": "string", "description": "The file content encoded as base64"},
                            "name": {"type": "string", "description": "The name of the file"},
                            "contentType": {"type": "string", "description": "The content type of the file"}
                        },
                        "required": ["content", "name", "contentType"]
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if file streaming failed"
                    }
                },
                "required": ["success", "margins_set", "saved", "file_path", "file"]
            }
        },
        "set_text_alignment": {
            "display_name": "Set Text Alignment",
            "description": "Set the vertical alignment for text within a shape. Requires the current presentation file in the 'files' parameter. Returns the updated presentation file.",
            "input_schema": {
                "type": "object",
                "properties": {
                    "presentation_id": {
                        "type": "string",
                        "description": "The presentation ID"
                    },
                    "slide_index": {
                        "type": "integer",
                        "description": "The slide index (0-based)"
                    },
                    "shape_index": {
                        "type": "integer",
                        "description": "The shape index (0-based)"
                    },
                    "vertical_anchor": {
                        "type": "string",
                        "enum": ["TOP", "MIDDLE", "BOTTOM"],
                        "description": "Vertical alignment of text within the shape"
                    },
                    "files": {
                        "type": "array",
                        "description": "List of files including the current presentation file",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {"type": "string"},
                                "contentType": {"type": "string"},
                                "content": {"type": "string"}
                            },
                            "required": ["name", "contentType", "content"]
                        }
                    }
                },
                "required": ["presentation_id", "slide_index", "shape_index"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "Whether the operation was successful"
                    },
                    "vertical_anchor": {
                        "type": "string",
                        "description": "The vertical anchor that was set"
                    },
                    "saved": {
                        "type": "boolean",
                        "description": "Whether the presentation was successfully saved"
                    },
                    "file_path": {
                        "type": "string",
                        "description": "Path where the presentation was saved"
                    },
                    "file": {
                        "type": "object",
                        "description": "The saved presentation file for streaming",
                        "properties": {
                            "content": {"type": "string", "description": "The file content encoded as base64"},
                            "name": {"type": "string", "description": "The name of the file"},
                            "contentType": {"type": "string", "description": "The content type of the file"}
                        },
                        "required": ["content", "name", "contentType"]
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if file streaming failed"
                    }
                },
                "required": ["success", "saved", "file_path", "file"]
            }
        },
        "set_slide_background_color": {
            "display_name": "Set Slide Background Color",
            "description": "Set a solid color background for a slide. Requires the current presentation file in the 'files' parameter. Returns the updated presentation file.",
            "input_schema": {
                "type": "object",
                "properties": {
                    "presentation_id": {
                        "type": "string",
                        "description": "The presentation ID"
                    },
                    "slide_index": {
                        "type": "integer",
                        "description": "The slide index (0-based)"
                    },
                    "color": {
                        "description": "Color specification",
                        "oneOf": [
                            {
                                "type": "string",
                                "pattern": "^#[0-9A-Fa-f]{6}$",
                                "description": "Hex color code (e.g., '#FF0000' for red)"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "rgb": {
                                        "type": "array",
                                        "items": {"type": "integer", "minimum": 0, "maximum": 255},
                                        "minItems": 3,
                                        "maxItems": 3,
                                        "description": "RGB color values [r, g, b]"
                                    }
                                },
                                "required": ["rgb"],
                                "additionalProperties": false
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "theme_color": {
                                        "type": "string",
                                        "enum": ["ACCENT_1", "ACCENT_2", "ACCENT_3", "ACCENT_4", "ACCENT_5", "ACCENT_6", "BACKGROUND_1", "BACKGROUND_2", "DARK_1", "DARK_2", "LIGHT_1", "LIGHT_2"],
                                        "description": "PowerPoint theme color"
                                    }
                                },
                                "required": ["theme_color"],
                                "additionalProperties": false
                            }
                        ]
                    },
                    "files": {
                        "type": "array",
                        "description": "List of files including the current presentation file",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {"type": "string"},
                                "contentType": {"type": "string"},
                                "content": {"type": "string"}
                            },
                            "required": ["name", "contentType", "content"]
                        }
                    }
                },
                "required": ["presentation_id", "slide_index", "color"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "Whether the operation was successful"
                    },
                    "color_set": {
                        "description": "The color that was applied"
                    },
                    "saved": {
                        "type": "boolean",
                        "description": "Whether the presentation was successfully saved"
                    },
                    "file_path": {
                        "type": "string",
                        "description": "Path where the presentation was saved"
                    },
                    "file": {
                        "type": "object",
                        "description": "The saved presentation file for streaming",
                        "properties": {
                            "content": {"type": "string", "description": "The file content encoded as base64"},
                            "name": {"type": "string", "description": "The name of the file"},
                            "contentType": {"type": "string", "description": "The content type of the file"}
                        },
                        "required": ["content", "name", "contentType"]
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if file streaming failed"
                    }
                },
                "required": ["success", "color_set", "saved", "file_path", "file"]
            }
        },
        "set_slide_background_gradient": {
            "display_name": "Set Slide Background Gradient",
            "description": "Set a gradient background for a slide. Requires the current presentation file in the 'files' parameter. Returns the updated presentation file.",
            "input_schema": {
                "type": "object",
                "properties": {
                    "presentation_id": {
                        "type": "string",
                        "description": "The presentation ID"
                    },
                    "slide_index": {
                        "type": "integer",
                        "description": "The slide index (0-based)"
                    },
                    "angle": {
                        "type": "number",
                        "description": "Gradient angle in degrees (0=left-to-right, 90=bottom-to-top)",
                        "minimum": 0,
                        "maximum": 360
                    },
                    "gradient_stops": {
                        "type": "array",
                        "description": "Gradient color stops (optional, uses default if not provided)",
                        "items": {
                            "type": "object",
                            "properties": {
                                "position": {
                                    "type": "number",
                                    "minimum": 0,
                                    "maximum": 1,
                                    "description": "Position of the stop (0.0 to 1.0)"
                                },
                                "color": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "rgb": {
                                                    "type": "array",
                                                    "items": {"type": "integer", "minimum": 0, "maximum": 255},
                                                    "minItems": 3,
                                                    "maxItems": 3
                                                }
                                            },
                                            "required": ["rgb"]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "theme_color": {
                                                    "type": "string",
                                                    "enum": ["ACCENT_1", "ACCENT_2", "ACCENT_3", "ACCENT_4", "ACCENT_5", "ACCENT_6"]
                                                }
                                            },
                                            "required": ["theme_color"]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "files": {
                        "type": "array",
                        "description": "List of files including the current presentation file",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {"type": "string"},
                                "contentType": {"type": "string"},
                                "content": {"type": "string"}
                            },
                            "required": ["name", "contentType", "content"]
                        }
                    }
                },
                "required": ["presentation_id", "slide_index"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "Whether the operation was successful"
                    },
                    "gradient_angle": {
                        "type": "number",
                        "description": "The gradient angle that was set"
                    },
                    "gradient_stops_applied": {
                        "type": "integer",
                        "description": "Number of gradient stops applied"
                    },
                    "saved": {
                        "type": "boolean",
                        "description": "Whether the presentation was successfully saved"
                    },
                    "file_path": {
                        "type": "string",
                        "description": "Path where the presentation was saved"
                    },
                    "file": {
                        "type": "object",
                        "description": "The saved presentation file for streaming",
                        "properties": {
                            "content": {"type": "string", "description": "The file content encoded as base64"},
                            "name": {"type": "string", "description": "The name of the file"},
                            "contentType": {"type": "string", "description": "The content type of the file"}
                        },
                        "required": ["content", "name", "contentType"]
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if file streaming failed"
                    }
                },
                "required": ["success", "gradient_angle", "gradient_stops_applied", "saved", "file_path", "file"]
            }
        },
        "add_background_image_workaround": {
            "display_name": "Add Background Image (Workaround)",
            "description": "Add an image as slide background using full-slide picture workaround. Requires the current presentation file and image file in the 'files' parameter. Since python-pptx doesn't support true background images, this adds a full-size image that covers the entire slide. Add other content AFTER using this action so elements appear on top of the background image. Returns the updated presentation file.",
            "input_schema": {
                "type": "object",
                "properties": {
                    "presentation_id": {
                        "type": "string",
                        "description": "The presentation ID"
                    },
                    "slide_index": {
                        "type": "integer",
                        "description": "The slide index (0-based)"
                    },
                    "files": {
                        "type": "array",
                        "description": "List of files to use",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the file"
                                },
                                "contentType": {
                                    "type": "string",
                                    "description": "The MIME type of the file"
                                },
                                "content": {
                                    "type": "string",
                                    "description": "The file content encoded as base64"
                                }
                            },
                            "required": ["name", "contentType", "content"]
                        }
                    }
                },
                "required": ["presentation_id", "slide_index"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "Whether the operation was successful"
                    },
                    "method": {
                        "type": "string",
                        "description": "The method used to add the background"
                    },
                    "picture_width": {
                        "type": "number",
                        "description": "Width of the background picture"
                    },
                    "picture_height": {
                        "type": "number",
                        "description": "Height of the background picture"
                    },
                    "note": {
                        "type": "string",
                        "description": "Important note about usage"
                    },
                    "saved": {
                        "type": "boolean",
                        "description": "Whether the presentation was successfully saved"
                    },
                    "file_path": {
                        "type": "string",
                        "description": "Path where the presentation was saved"
                    },
                    "file": {
                        "type": "object",
                        "description": "The saved presentation file for streaming",
                        "properties": {
                            "content": {"type": "string", "description": "The file content encoded as base64"},
                            "name": {"type": "string", "description": "The name of the file"},
                            "contentType": {"type": "string", "description": "The content type of the file"}
                        },
                        "required": ["content", "name", "contentType"]
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if file streaming failed"
                    }
                },
                "required": ["success", "method", "picture_width", "picture_height", "note", "saved", "file_path", "file"]
            }
        },
        "reset_slide_background": {
            "display_name": "Reset Slide Background",
            "description": "Reset slide background to inherit from master/layout. Requires the current presentation file in the 'files' parameter. Returns the updated presentation file.",
            "input_schema": {
                "type": "object",
                "properties": {
                    "presentation_id": {
                        "type": "string",
                        "description": "The presentation ID"
                    },
                    "slide_index": {
                        "type": "integer",
                        "description": "The slide index (0-based)"
                    },
                    "files": {
                        "type": "array",
                        "description": "List of files including the current presentation file",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {"type": "string"},
                                "contentType": {"type": "string"},
                                "content": {"type": "string"}
                            },
                            "required": ["name", "contentType", "content"]
                        }
                    }
                },
                "required": ["presentation_id", "slide_index"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "Whether the operation was successful"
                    },
                    "follow_master_background": {
                        "type": "boolean",
                        "description": "Whether the slide now follows master background"
                    },
                    "note": {
                        "type": "string",
                        "description": "Information about the reset operation"
                    },
                    "saved": {
                        "type": "boolean",
                        "description": "Whether the presentation was successfully saved"
                    },
                    "file_path": {
                        "type": "string",
                        "description": "Path where the presentation was saved"
                    },
                    "file": {
                        "type": "object",
                        "description": "The saved presentation file for streaming",
                        "properties": {
                            "content": {"type": "string", "description": "The file content encoded as base64"},
                            "name": {"type": "string", "description": "The name of the file"},
                            "contentType": {"type": "string", "description": "The content type of the file"}
                        },
                        "required": ["content", "name", "contentType"]
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if file streaming failed"
                    }
                },
                "required": ["success", "follow_master_background", "note", "saved", "file_path", "file"]
            }
        },
        "add_bullet_list": {
            "display_name": "Add Bullet List",
            "description": "Add a multi-level bullet list to a slide. Bullet symbols (•, ◦, ▪, ▫, ‣) are automatically added based on level. Each bullet item text is parsed as markdown for inline formatting like **bold**, *italic*, etc. Font size is automatically calculated based on total content length and box dimensions to ensure all bullets fit. Do not include bullet symbols in your text - they are added automatically. Returns the updated presentation file.",
            "input_schema": {
                "type": "object",
                "properties": {
                    "presentation_id": {
                        "type": "string",
                        "description": "ID of the presentation"
                    },
                    "slide_index": {
                        "type": "integer",
                        "description": "Index of the slide (0-based)"
                    },
                    "bullet_items": {
                        "type": "array",
                        "description": "Array of bullet items with markdown text and level",
                        "items": {
                            "type": "object",
                            "properties": {
                                "text": {
                                    "type": "string",
                                    "description": "Bullet text in markdown format (supports **bold**, *italic*, __underline__, `code`). Font size automatically calculated to fit all bullets in box."
                                },
                                "level": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 8,
                                    "description": "Indentation level (0-8)",
                                    "default": 0
                                }
                            },
                            "required": ["text"]
                        },
                        "minItems": 1
                    },
                    "position": {
                        "type": "object",
                        "properties": {
                            "left": {"type": "number", "description": "Left position in inches"},
                            "top": {"type": "number", "description": "Top position in inches"},
                            "width": {"type": "number", "description": "Width in inches"},
                            "height": {"type": "number", "description": "Height in inches"}
                        },
                        "required": ["left", "top", "width", "height"]
                    },
                    "files": {
                        "type": "array",
                        "description": "List of files including the current presentation file",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {"type": "string"},
                                "contentType": {"type": "string"},
                                "content": {"type": "string"}
                            },
                            "required": ["name", "contentType", "content"]
                        }
                    }
                },
                "required": ["presentation_id", "slide_index", "bullet_items", "position"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "shape_id": {
                        "type": "string",
                        "description": "ID of the created bullet list shape"
                    },
                    "items_count": {
                        "type": "integer",
                        "description": "Number of bullet items added"
                    },
                    "saved": {
                        "type": "boolean",
                        "description": "Whether the presentation was successfully saved"
                    },
                    "file_path": {
                        "type": "string",
                        "description": "Path where the presentation was saved"
                    },
                    "file": {
                        "type": "object",
                        "description": "The saved presentation file for streaming",
                        "properties": {
                            "content": {"type": "string", "description": "The file content encoded as base64"},
                            "name": {"type": "string", "description": "The name of the file"},
                            "contentType": {"type": "string", "description": "The content type of the file"}
                        },
                        "required": ["content", "name", "contentType"]
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if file streaming failed"
                    }
                },
                "required": ["shape_id", "items_count", "saved", "file_path", "file"]
            }
        },
        "delete_element": {
            "display_name": "Delete Element",
            "description": "Remove a shape, text box, image, chart, or any other element from a slide by its index position. Requires the current presentation file in the 'files' parameter. Use this to delete unwanted elements like text boxes, pictures, charts, tables, or any other shapes that were previously added to the slide. Shape indices are 0-based and correspond to the order elements were added. Returns the updated presentation file.",
            "input_schema": {
                "type": "object",
                "properties": {
                    "presentation_id": {
                        "type": "string",
                        "description": "ID of the presentation"
                    },
                    "slide_index": {
                        "type": "integer",
                        "description": "Index of the slide (0-based)"
                    },
                    "shape_index": {
                        "type": "integer",
                        "description": "Index of the shape/element to delete (0-based). This corresponds to the order elements were added to the slide."
                    },
                    "files": {
                        "type": "array",
                        "description": "List of files including the current presentation file",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {"type": "string"},
                                "contentType": {"type": "string"},
                                "content": {"type": "string"}
                            },
                            "required": ["name", "contentType", "content"]
                        }
                    }
                },
                "required": ["presentation_id", "slide_index", "shape_index"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "deleted": {
                        "type": "boolean",
                        "description": "Whether the element was successfully deleted"
                    },
                    "element_type": {
                        "type": "string",
                        "description": "Type of element that was deleted (if identifiable)"
                    },
                    "remaining_shapes": {
                        "type": "integer",
                        "description": "Number of shapes remaining on the slide after deletion"
                    },
                    "saved": {
                        "type": "boolean",
                        "description": "Whether the presentation was successfully saved"
                    },
                    "file_path": {
                        "type": "string",
                        "description": "Path where the presentation was saved"
                    },
                    "file": {
                        "type": "object",
                        "description": "The saved presentation file for streaming",
                        "properties": {
                            "content": {"type": "string", "description": "The file content encoded as base64"},
                            "name": {"type": "string", "description": "The name of the file"},
                            "contentType": {"type": "string", "description": "The content type of the file"}
                        },
                        "required": ["content", "name", "contentType"]
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if file streaming failed"
                    }
                },
                "required": ["deleted", "remaining_shapes", "saved", "file_path", "file"]
            }
        },
        "get_slide_elements": {
            "display_name": "Get Slide Elements",
            "description": "Get detailed information about all elements (shapes, text boxes, images, charts, tables, etc.) on a slide, including their positions, sizes, types, and boundary/overlap analysis. Content is automatically included for elements with detected problems (boundary violations, overlaps). Use the include_content parameter only when you need to see content for elements that have no issues. Requires the current presentation file in the 'files' parameter. Elements are listed in the order they appear on the slide, with index numbers that correspond to the delete_element action.",
            "input_schema": {
                "type": "object",
                "properties": {
                    "presentation_id": {
                        "type": "string",
                        "description": "ID of the presentation"
                    },
                    "slide_index": {
                        "type": "integer",
                        "description": "Index of the slide (0-based)"
                    },
                    "include_content": {
                        "type": "boolean",
                        "description": "Whether to include text content for elements with no detected issues. Content is automatically shown for problematic elements. Only use true when you need content for elements that have no boundary/overlap problems (default: false for minimal output)",
                        "default": false
                    },
                    "files": {
                        "type": "array",
                        "description": "List of files including the current presentation file",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {"type": "string"},
                                "contentType": {"type": "string"},
                                "content": {"type": "string"}
                            },
                            "required": ["name", "contentType", "content"]
                        }
                    }
                },
                "required": ["presentation_id", "slide_index"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "slide_index": {
                        "type": "integer",
                        "description": "Index of the slide that was inspected"
                    },
                    "total_elements": {
                        "type": "integer",
                        "description": "Total number of elements on the slide"
                    },
                    "layout_status": {
                        "type": "string",
                        "enum": ["no_issues", "issues_detected"],
                        "description": "Overall layout status: 'no_issues' if all elements are properly positioned, 'issues_detected' if there are boundary or overlap problems"
                    },
                    "slide_dimensions": {
                        "type": "object",
                        "description": "Slide dimensions in inches",
                        "properties": {
                            "width": {"type": "number", "description": "Slide width in inches"},
                            "height": {"type": "number", "description": "Slide height in inches"}
                        },
                        "required": ["width", "height"]
                    },
                    "elements_outside_boundary": {
                        "type": "integer",
                        "description": "Number of elements that extend beyond the slide boundaries"
                    },
                    "total_overlapping_pairs": {
                        "type": "integer",
                        "description": "Total number of element pairs that overlap with each other"
                    },
                    "boundary_warning": {
                        "type": "string",
                        "description": "Summary warning message if any elements are outside slide boundaries"
                    },
                    "overlap_warning": {
                        "type": "string",
                        "description": "Summary warning message if any elements overlap with each other"
                    },
                    "overall_warning": {
                        "type": "string",
                        "description": "Combined summary of all layout issues (boundary and overlaps)"
                    },
                    "detailed_warnings": {
                        "type": "array",
                        "description": "Detailed warning messages for boundary issues",
                        "items": {"type": "string"}
                    },
                    "element_overlaps": {
                        "type": "array",
                        "description": "Detailed information about all overlapping element pairs",
                        "items": {
                            "type": "object",
                            "properties": {
                                "element1_index": {"type": "integer", "description": "Index of first overlapping element"},
                                "element1_type": {"type": "string", "description": "Type of first element"},
                                "element1_name": {"type": "string", "description": "Name of first element"},
                                "element2_index": {"type": "integer", "description": "Index of second overlapping element"},
                                "element2_type": {"type": "string", "description": "Type of second element"},
                                "element2_name": {"type": "string", "description": "Name of second element"},
                                "overlap_area": {"type": "number", "description": "Area of overlap in square inches"},
                                "overlap_dimensions": {
                                    "type": "object",
                                    "properties": {
                                        "width": {"type": "number", "description": "Width of overlap area in inches"},
                                        "height": {"type": "number", "description": "Height of overlap area in inches"}
                                    },
                                    "required": ["width", "height"]
                                },
                                "overlap_position": {
                                    "type": "object",
                                    "properties": {
                                        "left": {"type": "number", "description": "Left edge of overlap area"},
                                        "top": {"type": "number", "description": "Top edge of overlap area"},
                                        "right": {"type": "number", "description": "Right edge of overlap area"},
                                        "bottom": {"type": "number", "description": "Bottom edge of overlap area"}
                                    },
                                    "required": ["left", "top", "right", "bottom"]
                                },
                                "overlap_percentages": {
                                    "type": "object",
                                    "properties": {
                                        "element1_coverage": {"type": "number", "description": "Percentage of element1 covered by overlap"},
                                        "element2_coverage": {"type": "number", "description": "Percentage of element2 covered by overlap"}
                                    },
                                    "required": ["element1_coverage", "element2_coverage"]
                                },
                                "severity": {
                                    "type": "string",
                                    "enum": ["low", "medium", "high"],
                                    "description": "Overlap severity based on coverage percentage (high: >50%, medium: >20%, low: ≤20%)"
                                },
                                "description": {"type": "string", "description": "Human-readable description of the overlap"}
                            },
                            "required": ["element1_index", "element1_type", "element2_index", "element2_type", "overlap_area", "overlap_dimensions", "overlap_position", "overlap_percentages", "severity", "description"]
                        }
                    },
                    "elements": {
                        "type": "array",
                        "description": "List of all elements on the slide",
                        "items": {
                            "type": "object",
                            "properties": {
                                "index": {
                                    "type": "integer",
                                    "description": "0-based index of the element (use this with delete_element action)"
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Type of element (text_box, image, chart, table, shape, text_element, etc.)"
                                },
                                "shape_id": {
                                    "type": "string",
                                    "description": "PowerPoint shape ID"
                                },
                                "position": {
                                    "type": "object",
                                    "properties": {
                                        "left": {"type": "number", "description": "Left position in inches"},
                                        "top": {"type": "number", "description": "Top position in inches"},
                                        "width": {"type": "number", "description": "Width in inches"},
                                        "height": {"type": "number", "description": "Height in inches"}
                                    },
                                    "required": ["left", "top", "width", "height"]
                                },
                                "content": {
                                    "type": "string",
                                    "description": "Text content if the element contains text, otherwise empty"
                                },
                                "has_text": {
                                    "type": "boolean",
                                    "description": "Whether this element contains text"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Element name if available"
                                },
                                "boundary_status": {
                                    "type": "string",
                                    "enum": ["inside", "outside"],
                                    "description": "Element boundary status: 'inside' = fully contained within slide boundaries, 'outside' = extends beyond slide boundaries"
                                },
                                "boundary_warnings": {
                                    "type": "array",
                                    "description": "Specific warnings about boundary issues",
                                    "items": {"type": "string"}
                                }
                            },
                            "required": ["index", "type", "shape_id", "position"]
                        }
                    }
                },
                "required": ["slide_index", "total_elements", "layout_status", "slide_dimensions", "elements"]
            }
        },
        "modify_element": {
            "display_name": "Modify Element",
            "description": "Modify element position, size, and table cell content by index. DOES NOT support general text replacement - use find_and_replace for that instead. USE THIS ONLY FOR: (1) Resizing/repositioning elements (changing dimensions, moving elements), (2) Updating specific table cells by row/column coordinates. DO NOT USE for simple text changes - find_and_replace is more efficient and doesn't require knowing element positions. Use get_slide_elements to find element indices. Requires the current presentation file in the 'files' parameter. Returns the updated presentation file.",
            "input_schema": {
                "type": "object",
                "properties": {
                    "presentation_id": {
                        "type": "string",
                        "description": "ID of the presentation"
                    },
                    "slide_index": {
                        "type": "integer",
                        "description": "Index of the slide (0-based)"
                    },
                    "element_index": {
                        "type": "integer",
                        "description": "Index of the element to modify (0-based, use get_slide_elements to find)"
                    },
                    "position": {
                        "type": "object",
                        "description": "New position and size for the element (optional)",
                        "properties": {
                            "left": {"type": "number", "description": "Left position in inches"},
                            "top": {"type": "number", "description": "Top position in inches"},
                            "width": {"type": "number", "description": "Width in inches"},
                            "height": {"type": "number", "description": "Height in inches"}
                        }
                    },
                    "table_cell_updates": {
                        "type": "array",
                        "description": "Update specific cells in a table (only for table elements). Perfect for filling template tables with data while preserving existing cell styles.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "row": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "description": "Row index (0-based)"
                                },
                                "col": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "description": "Column index (0-based)"
                                },
                                "text": {
                                    "type": "string",
                                    "description": "New text content for the cell in markdown format (replaces existing text). Use **bold**, *italic*, __underline__, `code` for inline formatting."
                                }
                            },
                            "required": ["row", "col"]
                        }
                    },
                    "files": {
                        "type": "array",
                        "description": "List of files including the current presentation file",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {"type": "string"},
                                "contentType": {"type": "string"},
                                "content": {"type": "string"}
                            },
                            "required": ["name", "contentType", "content"]
                        }
                    }
                },
                "required": ["presentation_id", "slide_index", "element_index"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "modified": {
                        "type": "boolean",
                        "description": "Whether the element was successfully modified"
                    },
                    "element_index": {
                        "type": "integer",
                        "description": "Index of the modified element"
                    },
                    "element_type": {
                        "type": "string",
                        "description": "Type of element that was modified"
                    },
                    "changes_made": {
                        "type": "array",
                        "description": "List of changes that were applied to the element",
                        "items": {"type": "string"}
                    },
                    "new_position": {
                        "type": "object",
                        "description": "Updated position and size of the element",
                        "properties": {
                            "left": {"type": "number"},
                            "top": {"type": "number"},
                            "width": {"type": "number"},
                            "height": {"type": "number"},
                            "right": {"type": "number"},
                            "bottom": {"type": "number"}
                        },
                        "required": ["left", "top", "width", "height", "right", "bottom"]
                    },
                    "saved": {
                        "type": "boolean",
                        "description": "Whether the presentation was successfully saved"
                    },
                    "file_path": {
                        "type": "string",
                        "description": "Path where the presentation was saved"
                    },
                    "file": {
                        "type": "object",
                        "description": "The saved presentation file for streaming",
                        "properties": {
                            "content": {"type": "string", "description": "The file content encoded as base64"},
                            "name": {"type": "string", "description": "The name of the file"},
                            "contentType": {"type": "string", "description": "The content type of the file"}
                        },
                        "required": ["content", "name", "contentType"]
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if file streaming failed"
                    }
                },
                "required": ["modified", "element_index", "element_type", "changes_made", "new_position", "saved", "file_path", "file"]
            }
        },
        "get_element_styling": {
            "display_name": "Get Element Styling",
            "description": "Extract comprehensive styling information from any slide element (text box, table, image, chart, etc.) in a token-optimized format perfect for LLM analysis. Returns compressed styling descriptions that include patterns, formatting, and recreation instructions. Ideal for template analysis and element replication. Requires the current presentation file in the 'files' parameter.",
            "input_schema": {
                "type": "object",
                "properties": {
                    "presentation_id": {
                        "type": "string",
                        "description": "ID of the presentation"
                    },
                    "slide_index": {
                        "type": "integer",
                        "description": "Index of the slide (0-based)"
                    },
                    "element_index": {
                        "type": "integer",
                        "description": "Index of the element to analyze (0-based, use get_slide_elements to find)"
                    },
                    "files": {
                        "type": "array",
                        "description": "List of files including the current presentation file",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {"type": "string"},
                                "contentType": {"type": "string"},
                                "content": {"type": "string"}
                            },
                            "required": ["name", "contentType", "content"]
                        }
                    }
                },
                "required": ["presentation_id", "slide_index", "element_index"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "element_index": {
                        "type": "integer",
                        "description": "Index of the analyzed element"
                    },
                    "element_type": {
                        "type": "string",
                        "description": "Type of element (table, text_box, image, chart, etc.)"
                    },
                    "styling_description": {
                        "type": "string",
                        "description": "Comprehensive styling information in compressed, LLM-friendly format. Includes position, patterns, formatting details, and recreation instructions."
                    },
                    "position": {
                        "type": "object",
                        "description": "Element position and dimensions",
                        "properties": {
                            "left": {"type": "number", "description": "Left position in inches"},
                            "top": {"type": "number", "description": "Top position in inches"},
                            "width": {"type": "number", "description": "Width in inches"},
                            "height": {"type": "number", "description": "Height in inches"}
                        },
                        "required": ["left", "top", "width", "height"]
                    }
                },
                "required": ["element_index", "element_type", "styling_description", "position"]
            }
        },
        "build_slide_from_markdown": {
            "display_name": "Build Slide from Markdown",
            "description": "Build an entire slide from markdown content with automatic layout and formatting. The integration parses markdown into structured elements (titles, headings, paragraphs, bullets, tables) and positions them intelligently on the slide with calculated font sizes to ensure all content fits. LLM provides content in markdown; integration handles ALL positioning, sizing, and formatting. Supports: # title, ## headings, paragraphs, - bullets, 1. numbered lists, tables, **bold**, *italic*, __underline__, `code`. Font sizes automatically calculated per element. Requires the current presentation file in the 'files' parameter.",
            "input_schema": {
                "type": "object",
                "properties": {
                    "presentation_id": {
                        "type": "string",
                        "description": "ID of the presentation"
                    },
                    "slide_index": {
                        "type": "integer",
                        "description": "Index of the slide (0-based)"
                    },
                    "markdown": {
                        "type": "string",
                        "description": "Markdown content for the slide. Supports headings (# H1, ## H2), paragraphs, lists (- bullets, 1. numbered), tables, inline formatting (**bold**, *italic*, `code`), and more."
                    },
                    "files": {
                        "type": "array",
                        "description": "List of files including the current presentation file",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {"type": "string"},
                                "contentType": {"type": "string"},
                                "content": {"type": "string"}
                            },
                            "required": ["name", "contentType", "content"]
                        }
                    }
                },
                "required": ["presentation_id", "slide_index", "markdown"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "elements_created": {
                        "type": "integer",
                        "description": "Number of elements created on the slide"
                    },
                    "shapes": {
                        "type": "array",
                        "description": "List of created shapes with their types and IDs",
                        "items": {
                            "type": "object",
                            "properties": {
                                "type": {"type": "string", "description": "Element type (h1, h2, p, ul, ol, table, etc.)"},
                                "shape_id": {"type": "string", "description": "PowerPoint shape ID"}
                            }
                        }
                    },
                    "markdown_parsed": {
                        "type": "boolean",
                        "description": "Whether markdown was successfully parsed"
                    },
                    "saved": {
                        "type": "boolean",
                        "description": "Whether the presentation was successfully saved"
                    },
                    "file_path": {
                        "type": "string",
                        "description": "Path where the presentation was saved"
                    },
                    "file": {
                        "type": "object",
                        "description": "The saved presentation file for streaming",
                        "properties": {
                            "content": {"type": "string", "description": "The file content encoded as base64"},
                            "name": {"type": "string", "description": "The name of the file"},
                            "contentType": {"type": "string", "description": "The content type of the file"}
                        },
                        "required": ["content", "name", "contentType"]
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if file streaming failed"
                    }
                },
                "required": ["elements_created", "shapes", "markdown_parsed", "saved", "file_path", "file"]
            }
        },
        "build_presentation_from_markdown": {
            "display_name": "Build Presentation from Markdown",
            "description": "Build a multi-slide presentation from a markdown outline. Each H1 (# heading) creates a new slide with its content. The integration automatically creates slides, parses markdown for each slide, calculates optimal font sizes, and handles all layout/formatting. Font sizes are calculated per element to ensure content fits while preserving markdown formatting. LLM provides entire presentation as markdown; integration does everything else. Perfect for creating complete presentations from outlines. Requires the current presentation file in the 'files' parameter.",
            "input_schema": {
                "type": "object",
                "properties": {
                    "presentation_id": {
                        "type": "string",
                        "description": "ID of the presentation"
                    },
                    "outline": {
                        "type": "string",
                        "description": "Markdown outline for the entire presentation. Each # H1 creates a new slide. Content under each H1 becomes that slide's content. Supports all markdown features: headings, lists, tables, formatting, etc."
                    },
                    "files": {
                        "type": "array",
                        "description": "List of files including the current presentation file",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {"type": "string"},
                                "contentType": {"type": "string"},
                                "content": {"type": "string"}
                            },
                            "required": ["name", "contentType", "content"]
                        }
                    }
                },
                "required": ["presentation_id", "outline"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "slides_created": {
                        "type": "integer",
                        "description": "Number of slides created"
                    },
                    "slides": {
                        "type": "array",
                        "description": "Details about each created slide",
                        "items": {
                            "type": "object",
                            "properties": {
                                "slide_index": {"type": "integer", "description": "Index of the created slide"},
                                "elements_created": {"type": "integer", "description": "Number of elements on this slide"},
                                "shapes": {
                                    "type": "array",
                                    "description": "Shapes created on this slide",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {"type": "string"},
                                            "shape_id": {"type": "string"}
                                        }
                                    }
                                },
                                "error": {"type": "string", "description": "Error message if slide creation failed"}
                            }
                        }
                    },
                    "outline_parsed": {
                        "type": "boolean",
                        "description": "Whether outline was successfully parsed"
                    },
                    "saved": {
                        "type": "boolean",
                        "description": "Whether the presentation was successfully saved"
                    },
                    "file_path": {
                        "type": "string",
                        "description": "Path where the presentation was saved"
                    },
                    "file": {
                        "type": "object",
                        "description": "The saved presentation file for streaming",
                        "properties": {
                            "content": {"type": "string", "description": "The file content encoded as base64"},
                            "name": {"type": "string", "description": "The name of the file"},
                            "contentType": {"type": "string", "description": "The content type of the file"}
                        },
                        "required": ["content", "name", "contentType"]
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if file streaming failed"
                    }
                },
                "required": ["slides_created", "slides", "outline_parsed", "saved", "file_path", "file"]
            }
        },
        "find_and_replace": {
            "display_name": "Find and Replace",
            "description": "Find and replace text across entire presentation. Scans all text boxes and table cells on all slides. Supports multiple find/replace operations in one call (batch processing). Replacement text is parsed as markdown with automatic font sizing and color preservation. SAFETY: Blocks replacements if multiple matches found without replace_all=true confirmation. USE THIS FOR: Filling templates with placeholders ({{COMPANY}}, {{DATE}}, etc.), updating text content without knowing element positions, batch text updates across multiple slides. This is the PREFERRED method for text-based updates - you don't need modify_element for simple text replacements. Perfect for filling presentation templates with multiple placeholders in a single call.",
            "input_schema": {
                "type": "object",
                "properties": {
                    "presentation_id": {
                        "type": "string",
                        "description": "ID of the presentation"
                    },
                    "replacements": {
                        "type": "array",
                        "description": "Array of find/replace operations to perform",
                        "items": {
                            "type": "object",
                            "properties": {
                                "find": {
                                    "type": "string",
                                    "description": "Text to find (case-sensitive exact match)"
                                },
                                "replace": {
                                    "type": "string",
                                    "description": "Replacement text in markdown format (supports **bold**, *italic*, __underline__, `code`). Font size automatically calculated."
                                },
                                "replace_all": {
                                    "type": "boolean",
                                    "description": "Set to true to allow replacing multiple matches. If false (default), operation is BLOCKED if multiple matches found (safety feature).",
                                    "default": false
                                }
                            },
                            "required": ["find", "replace"]
                        },
                        "minItems": 1
                    },
                    "files": {
                        "type": "array",
                        "description": "List of files including the current presentation file",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {"type": "string"},
                                "contentType": {"type": "string"},
                                "content": {"type": "string"}
                            },
                            "required": ["name", "contentType", "content"]
                        }
                    }
                },
                "required": ["presentation_id", "replacements"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "True if replacements made and no operations blocked"
                    },
                    "total_replacements": {
                        "type": "integer",
                        "description": "Total number of text replacements performed"
                    },
                    "processed": {
                        "type": "integer",
                        "description": "Number of replacement operations processed"
                    },
                    "blocked": {
                        "type": "array",
                        "description": "Replacements that were blocked due to multiple matches without replace_all flag",
                        "items": {
                            "type": "object",
                            "properties": {
                                "BLOCKED": {"type": "string", "description": "Block reason"},
                                "find_phrase": {"type": "string"},
                                "match_count": {"type": "integer"},
                                "matches": {
                                    "type": "array",
                                    "description": "First 5 match locations"
                                },
                                "fix_required": {"type": "string"}
                            }
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "description": "Warning messages (no matches found, blocked operations, etc.)",
                        "items": {"type": "string"}
                    },
                    "saved": {
                        "type": "boolean",
                        "description": "Whether the presentation was successfully saved"
                    },
                    "file_path": {
                        "type": "string",
                        "description": "Path where the presentation was saved"
                    },
                    "file": {
                        "type": "object",
                        "description": "The saved presentation file for streaming",
                        "properties": {
                            "content": {"type": "string", "description": "The file content encoded as base64"},
                            "name": {"type": "string", "description": "The name of the file"},
                            "contentType": {"type": "string", "description": "The content type of the file"}
                        },
                        "required": ["content", "name", "contentType"]
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if file streaming failed"
                    }
                },
                "required": ["success", "total_replacements", "processed", "blocked", "warnings", "saved", "file_path", "file"]
            }
        }
    }
}