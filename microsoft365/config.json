{
    "name": "Microsoft 365",
    "version": "1.0.0",
    "description": "Microsoft 365 integration for Outlook, OneDrive, and Calendar",
    "entry_point": "microsoft365.py",
    "auth": {
        "type": "platform",
        "provider": "Microsoft 365",
        "scopes": [
            "offline_access",
            "Mail.ReadWrite",
            "Mail.Send",
            "Files.ReadWrite",
            "Calendars.ReadWrite",
            "Contacts.Read",
            "Sites.Read.All"
        ]
    },
    "actions": {
        "send_email": {
            "display_name": "Send Email",
            "description": "Send an email via Outlook",
            "input_schema": {
                "type": "object",
                "properties": {
                    "to": {
                        "type": "string",
                        "description": "Recipient email address"
                    },
                    "subject": {
                        "type": "string",
                        "description": "Email subject"
                    },
                    "body": {
                        "type": "string",
                        "description": "Email body content"
                    },
                    "body_type": {
                        "type": "string",
                        "description": "Body content type (Text or HTML)",
                        "enum": ["Text", "HTML"],
                        "default": "Text"
                    },
                    "cc": {
                        "type": "array",
                        "description": "CC email addresses",
                        "items": {
                            "type": "string"
                        }
                    },
                    "bcc": {
                        "type": "array",
                        "description": "BCC email addresses",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": ["to", "subject", "body"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "boolean",
                        "description": "Whether the operation was successful"
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if the operation failed"
                    }
                },
                "required": ["result"]
            }
        },
        "create_calendar_event": {
            "display_name": "Create Calendar Event",
            "description": "Create a calendar event in Outlook",
            "input_schema": {
                "type": "object",
                "properties": {
                    "subject": {
                        "type": "string",
                        "description": "Event title"
                    },
                    "start_time": {
                        "type": "string",
                        "description": "Event start time (ISO 8601 format)"
                    },
                    "end_time": {
                        "type": "string",
                        "description": "Event end time (ISO 8601 format)"
                    },
                    "location": {
                        "type": "string",
                        "description": "Event location"
                    },
                    "body": {
                        "type": "string",
                        "description": "Event description"
                    },
                    "attendees": {
                        "type": "array",
                        "description": "List of attendee email addresses",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": ["subject", "start_time", "end_time"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the created event"
                    },
                    "webLink": {
                        "type": "string",
                        "description": "Web link to the event"
                    },
                    "result": {
                        "type": "boolean",
                        "description": "Whether the operation was successful"
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if the operation failed"
                    }
                },
                "required": ["result", "id", "webLink"]
            }
        },
        "upload_file": {
            "display_name": "Upload File to OneDrive",
            "description": "Upload a file to OneDrive - provide filename, text content, and optional folder",
            "input_schema": {
                "type": "object",
                "properties": {
                    "filename": {
                        "type": "string",
                        "description": "Name of the file to create (e.g., 'test.txt', 'notes.md')"
                    },
                    "content": {
                        "type": "string",
                        "description": "Text content of the file (will be automatically encoded)"
                    },
                    "content_type": {
                        "type": "string",
                        "description": "MIME type of the file",
                        "default": "text/plain"
                    },
                    "folder_path": {
                        "type": "string",
                        "description": "Destination folder path in OneDrive (default: root)",
                        "default": "/"
                    }
                },
                "required": ["filename", "content"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the uploaded file"
                    },
                    "webUrl": {
                        "type": "string",
                        "description": "Web URL to access the file"
                    },
                    "size": {
                        "type": "integer",
                        "description": "File size in bytes"
                    },
                    "result": {
                        "type": "boolean",
                        "description": "Whether the operation was successful"
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if the operation failed"
                    }
                },
                "required": ["result", "id", "webUrl", "size"]
            }
        },
        "list_files": {
            "display_name": "List OneDrive Files",
            "description": "List files in a OneDrive folder",
            "input_schema": {
                "type": "object",
                "properties": {
                    "folder_path": {
                        "type": "string",
                        "description": "Folder path to list (default: root)",
                        "default": "/"
                    },
                    "limit": {
                        "type": "integer",
                        "description": "Maximum number of files to return",
                        "default": 100
                    }
                }
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "files": {
                        "type": "array",
                        "description": "List of files",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "File ID"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "File name"
                                },
                                "size": {
                                    "type": "integer",
                                    "description": "File size in bytes"
                                },
                                "lastModifiedDateTime": {
                                    "type": "string",
                                    "description": "Last modified time"
                                },
                                "webUrl": {
                                    "type": "string",
                                    "description": "Web URL to the file"
                                },
                                "folder": {
                                    "type": "object",
                                    "description": "Folder facet (present if item is a folder)"
                                }
                            }
                        }
                    },
                    "result": {
                        "type": "boolean",
                        "description": "Whether the operation was successful"
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if the operation failed"
                    }
                },
                "required": ["files", "result"]
            }
        },
        "update_calendar_event": {
            "display_name": "Update Calendar Event",
            "description": "Update an existing calendar event in Outlook",
            "input_schema": {
                "type": "object",
                "properties": {
                    "event_id": {
                        "type": "string",
                        "description": "ID of the event to update"
                    },
                    "subject": {
                        "type": "string",
                        "description": "Event title"
                    },
                    "start_time": {
                        "type": "string",
                        "description": "Event start time (ISO 8601 format)"
                    },
                    "end_time": {
                        "type": "string",
                        "description": "Event end time (ISO 8601 format)"
                    },
                    "location": {
                        "type": "string",
                        "description": "Event location"
                    },
                    "body": {
                        "type": "string",
                        "description": "Event description"
                    },
                    "attendees": {
                        "type": "array",
                        "description": "List of attendee email addresses",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": ["event_id"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the updated event"
                    },
                    "webLink": {
                        "type": "string",
                        "description": "Web link to the event"
                    },
                    "result": {
                        "type": "boolean",
                        "description": "Whether the operation was successful"
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if the operation failed"
                    }
                },
                "required": ["result", "id", "webLink"]
            }
        },
        "list_calendar_events": {
            "display_name": "List Calendar Events",
            "description": "List calendar events for a specific date range. Defaults to next 30 days if no date specified.",
            "input_schema": {
                "type": "object",
                "properties": {
                    "start_date": {
                        "type": "string",
                        "description": "Start date to filter events (ISO 8601 format, e.g., 2024-08-01). Legacy parameter - use start_datetime for timezone-aware queries"
                    },
                    "end_date": {
                        "type": "string",
                        "description": "End date to filter events (ISO 8601 format, e.g., 2024-08-01). Legacy parameter - use end_datetime for timezone-aware queries"
                    },
                    "start_datetime": {
                        "type": "string",
                        "description": "Start datetime to filter events in UTC (ISO 8601 format, e.g., 2024-08-01T07:00:00Z). Recommended for timezone-aware queries"
                    },
                    "end_datetime": {
                        "type": "string",
                        "description": "End datetime to filter events in UTC (ISO 8601 format, e.g., 2024-08-01T23:59:59Z). If not provided, defaults to start_datetime"
                    },
                    "limit": {
                        "type": "integer",
                        "description": "Maximum number of events to return",
                        "default": 100
                    },
                    "user_timezone": {
                        "type": "string",
                        "description": "User's timezone (e.g., 'America/Los_Angeles') for intelligent date defaults. Optional - defaults to UTC."
                    }
                }
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "events": {
                        "type": "array",
                        "description": "List of calendar events",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "Event ID"
                                },
                                "subject": {
                                    "type": "string",
                                    "description": "Event title"
                                },
                                "start": {
                                    "type": "object",
                                    "description": "Event start time and timezone"
                                },
                                "end": {
                                    "type": "object",
                                    "description": "Event end time and timezone"
                                },
                                "location": {
                                    "type": "string",
                                    "description": "Event location"
                                },
                                "bodyPreview": {
                                    "type": "string",
                                    "description": "Preview of event description"
                                },
                                "organizer": {
                                    "type": "string",
                                    "description": "Event organizer email"
                                },
                                "attendees": {
                                    "type": "array",
                                    "description": "List of attendees",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "email": {
                                                "type": "string",
                                                "description": "Attendee email"
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Attendee name"
                                            },
                                            "response_status": {
                                                "type": "string",
                                                "description": "Response status (accepted, declined, tentativelyAccepted, notResponded)"
                                            }
                                        }
                                    }
                                },
                                "webLink": {
                                    "type": "string",
                                    "description": "Web link to the event"
                                },
                                "isAllDay": {
                                    "type": "boolean",
                                    "description": "Whether this is an all-day event"
                                }
                            }
                        }
                    },
                    "result": {
                        "type": "boolean",
                        "description": "Whether the operation was successful"
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if the operation failed"
                    }
                },
                "required": ["events", "result"]
            }
        },
        "list_emails": {
            "display_name": "List Emails", 
            "description": "List emails for a specific date range and folder. Defaults to last 24 hours if no date specified.",
            "input_schema": {
                "type": "object",
                "properties": {
                    "start_date": {
                        "type": "string",
                        "description": "Start date to filter emails (ISO 8601 format, e.g., 2024-08-01). Legacy parameter - use start_datetime for timezone-aware queries"
                    },
                    "end_date": {
                        "type": "string",
                        "description": "End date to filter emails (ISO 8601 format, e.g., 2024-08-01). Legacy parameter - use end_datetime for timezone-aware queries"
                    },
                    "start_datetime": {
                        "type": "string",
                        "description": "Start datetime to filter emails in UTC (ISO 8601 format, e.g., 2024-08-01T07:00:00Z). Recommended for timezone-aware queries"
                    },
                    "end_datetime": {
                        "type": "string",
                        "description": "End datetime to filter emails in UTC (ISO 8601 format, e.g., 2024-08-01T23:59:59Z). If not provided, defaults to start_datetime"
                    },
                    "folder": {
                        "type": "string",
                        "description": "Mail folder to query (default: Inbox)",
                        "default": "Inbox"
                    },
                    "limit": {
                        "type": "integer",
                        "description": "Maximum number of emails to return",
                        "default": 50
                    }
                }
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "emails": {
                        "type": "array",
                        "description": "List of emails",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "Email ID"
                                },
                                "subject": {
                                    "type": "string",
                                    "description": "Email subject"
                                },
                                "sender": {
                                    "type": "object",
                                    "description": "Sender information"
                                },
                                "receivedDateTime": {
                                    "type": "string",
                                    "description": "Time email was received"
                                },
                                "bodyPreview": {
                                    "type": "string",
                                    "description": "Preview of email body"
                                },
                                "body": {
                                    "type": "object",
                                    "description": "Email body with content and type"
                                },
                                "hasAttachments": {
                                    "type": "boolean",
                                    "description": "Whether email has attachments"
                                },
                                "isRead": {
                                    "type": "boolean",
                                    "description": "Whether email has been read"
                                },
                                "importance": {
                                    "type": "string",
                                    "description": "Email importance level"
                                }
                            }
                        }
                    },
                    "result": {
                        "type": "boolean",
                        "description": "Whether the operation was successful"
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if the operation failed"
                    }
                },
                "required": ["emails", "result"]
            }
        },
        "list_emails_from_contact": {
            "display_name": "List Emails from Contact",
            "description": "List latest emails from a specific contact",
            "input_schema": {
                "type": "object",
                "properties": {
                    "contact_email": {
                        "type": "string",
                        "description": "Email address of the contact to search for"
                    },
                    "limit": {
                        "type": "integer",
                        "description": "Maximum number of emails to return",
                        "default": 5
                    },
                    "folder": {
                        "type": "string",
                        "description": "Mail folder to search in (default: Inbox)",
                        "default": "Inbox"
                    }
                },
                "required": ["contact_email"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "emails": {
                        "type": "array",
                        "description": "List of emails from the contact",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "Email ID"
                                },
                                "subject": {
                                    "type": "string",
                                    "description": "Email subject"
                                },
                                "sender": {
                                    "type": "object",
                                    "description": "Sender information"
                                },
                                "receivedDateTime": {
                                    "type": "string",
                                    "description": "Time email was received"
                                },
                                "bodyPreview": {
                                    "type": "string",
                                    "description": "Preview of email body"
                                },
                                "body": {
                                    "type": "object",
                                    "description": "Email body with content and type"
                                },
                                "hasAttachments": {
                                    "type": "boolean",
                                    "description": "Whether email has attachments"
                                },
                                "isRead": {
                                    "type": "boolean",
                                    "description": "Whether email has been read"
                                },
                                "importance": {
                                    "type": "string",
                                    "description": "Email importance level"
                                }
                            }
                        }
                    },
                    "contact_email": {
                        "type": "string",
                        "description": "The contact email that was searched for"
                    },
                    "result": {
                        "type": "boolean",
                        "description": "Whether the operation was successful"
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if the operation failed"
                    }
                },
                "required": ["emails", "contact_email", "result"]
            }
        },
        "mark_email_read": {
            "display_name": "Mark Email as Read/Unread",
            "description": "Mark an email as read or unread",
            "input_schema": {
                "type": "object",
                "properties": {
                    "email_id": {
                        "type": "string",
                        "description": "The ID of the email to mark"
                    },
                    "is_read": {
                        "type": "boolean",
                        "description": "True to mark as read, false to mark as unread"
                    }
                },
                "required": ["email_id", "is_read"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the email that was updated"
                    },
                    "isRead": {
                        "type": "boolean",
                        "description": "The current read status"
                    },
                    "lastModifiedDateTime": {
                        "type": "string",
                        "description": "When the email was last modified"
                    },
                    "result": {
                        "type": "boolean",
                        "description": "Whether the operation was successful"
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if the operation failed"
                    }
                },
                "required": ["result", "id", "isRead", "lastModifiedDateTime"]
            }
        },
        "move_email": {
            "display_name": "Move Email to Folder",
            "description": "Move an email to a different folder",
            "input_schema": {
                "type": "object",
                "properties": {
                    "email_id": {
                        "type": "string",
                        "description": "The ID of the email to move"
                    },
                    "destination_folder": {
                        "type": "string",
                        "description": "Name or ID of the destination folder (e.g., 'Archive', 'Junk Email', 'Drafts')"
                    }
                },
                "required": ["email_id", "destination_folder"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the moved email"
                    },
                    "parentFolderId": {
                        "type": "string",
                        "description": "The ID of the folder the email was moved to"
                    },
                    "result": {
                        "type": "boolean",
                        "description": "Whether the operation was successful"
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if the operation failed"
                    }
                },
                "required": ["result", "id", "parentFolderId"]
            }
        },
        "read_email": {
            "display_name": "Read Email with Attachments",
            "description": "Read email content and list attachment metadata (without content download)",
            "input_schema": {
                "type": "object",
                "properties": {
                    "email_id": {
                        "type": "string",
                        "description": "The ID of the email to read"
                    },
                    "include_attachments": {
                        "type": "boolean",
                        "description": "Whether to include attachment metadata",
                        "default": true
                    }
                },
                "required": ["email_id"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "object",
                        "description": "Email details",
                        "properties": {
                            "id": {"type": "string", "description": "Email ID"},
                            "subject": {"type": "string", "description": "Email subject"},
                            "sender": {"type": "object", "description": "Sender information"},
                            "receivedDateTime": {"type": "string", "description": "Time email was received"},
                            "body": {"type": "object", "description": "Email body with content and type"},
                            "hasAttachments": {"type": "boolean", "description": "Whether email has attachments"}
                        }
                    },
                    "attachments": {
                        "type": "array",
                        "description": "List of email attachments",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {"type": "string", "description": "Attachment ID"},
                                "name": {"type": "string", "description": "Attachment filename"},
                                "size": {"type": "integer", "description": "Attachment size in bytes"},
                                "contentType": {"type": "string", "description": "MIME type of attachment"},
                                "message": {"type": "string", "description": "Information about attachment handling"}
                            }
                        }
                    },
                    "result": {"type": "boolean", "description": "Whether the operation was successful"},
                    "error": {"type": "string", "description": "Error message if the operation failed"}
                },
                "required": ["email", "attachments", "result"]
            }
        },
        "read_contacts": {
            "display_name": "Read Contacts",
            "description": "Read contacts from Outlook",
            "input_schema": {
                "type": "object",
                "properties": {
                    "limit": {
                        "type": "integer",
                        "description": "Maximum number of contacts to return",
                        "default": 100
                    },
                    "search": {
                        "type": "string",
                        "description": "Search query to filter contacts by name or company (case-insensitive, partial matching)"
                    }
                }
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "contacts": {
                        "type": "array",
                        "description": "List of contacts",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "Contact ID"
                                },
                                "displayName": {
                                    "type": "string",
                                    "description": "Contact display name"
                                },
                                "givenName": {
                                    "type": "string",
                                    "description": "First name"
                                },
                                "surname": {
                                    "type": "string",
                                    "description": "Last name"
                                },
                                "emailAddresses": {
                                    "type": "array",
                                    "description": "List of email addresses",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "address": {
                                                "type": "string",
                                                "description": "Email address"
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Email address name/label"
                                            }
                                        }
                                    }
                                },
                                "businessPhones": {
                                    "type": "array",
                                    "description": "List of business phone numbers",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "homePhones": {
                                    "type": "array",
                                    "description": "List of home phone numbers",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "mobilePhone": {
                                    "type": "string",
                                    "description": "Mobile phone number"
                                },
                                "companyName": {
                                    "type": "string",
                                    "description": "Company name"
                                },
                                "jobTitle": {
                                    "type": "string",
                                    "description": "Job title"
                                }
                            }
                        }
                    },
                    "result": {
                        "type": "boolean",
                        "description": "Whether the operation was successful"
                    },
                    "message": {
                        "type": "string",
                        "description": "Descriptive message about the search results"
                    },
                    "search_term": {
                        "type": "string",
                        "description": "The search term used (only present when searching)"
                    },
                    "total_searched": {
                        "type": "integer",
                        "description": "Total number of contacts searched through (only present when searching)"
                    },
                    "total_contacts": {
                        "type": "integer",
                        "description": "Total number of contacts retrieved (only present when not searching)"
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if the operation failed"
                    }
                },
                "required": ["contacts", "result", "message"]
            }
        },
        "search_onedrive_files": {
            "display_name": "Search OneDrive Files",
            "description": "Search for files in OneDrive using natural language query",
            "input_schema": {
                "type": "object",
                "properties": {
                    "query": {
                        "type": "string",
                        "description": "Search query to find files (e.g., 'quarterly report', 'budget 2024', 'project documents')"
                    },
                    "limit": {
                        "type": "integer",
                        "description": "Maximum number of files to return",
                        "default": 10
                    }
                },
                "required": ["query"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "files": {
                        "type": "array",
                        "description": "List of matching files",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "File ID"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "File name"
                                },
                                "size": {
                                    "type": "integer",
                                    "description": "File size in bytes"
                                },
                                "lastModifiedDateTime": {
                                    "type": "string",
                                    "description": "Last modified time"
                                },
                                "webUrl": {
                                    "type": "string",
                                    "description": "Web URL to the file"
                                },
                                "folder": {
                                    "type": "object",
                                    "description": "Folder facet (present if item is a folder)"
                                },
                                "file": {
                                    "type": "object",
                                    "description": "File facet with metadata"
                                }
                            }
                        }
                    },
                    "query": {
                        "type": "string",
                        "description": "The search query that was executed"
                    },
                    "result": {
                        "type": "boolean",
                        "description": "Whether the operation was successful"
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if the operation failed"
                    }
                },
                "required": ["files", "query", "result"]
            }
        },
        "read_onedrive_file_content": {
            "display_name": "Read OneDrive File Content",
            "description": "Read the content of a OneDrive file by ID, with automatic PDF conversion for Office documents",
            "input_schema": {
                "type": "object",
                "properties": {
                    "file_id": {
                        "type": "string",
                        "description": "The ID of the file to read (obtained from search or list operations)"
                    }
                },
                "required": ["file_id"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "file": {
                        "type": "object",
                        "properties": {
                            "content": {
                                "type": "string",
                                "description": "Base64 encoded file content - PDF for Office documents, original content for text files"
                            },
                            "name": {
                                "type": "string",
                                "description": "The name of the file"
                            },
                            "contentType": {
                                "type": "string",
                                "description": "Content type of the returned file (application/pdf for converted Office docs, original mime type for others)"
                            }
                        },
                        "required": ["content", "name", "contentType"]
                    },
                    "metadata": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "The ID of the file"
                            },
                            "name": {
                                "type": "string",
                                "description": "The name of the file"
                            },
                            "size": {
                                "type": "integer",
                                "description": "File size in bytes"
                            },
                            "mimeType": {
                                "type": "string",
                                "description": "The original MIME type of the file"
                            },
                            "webUrl": {
                                "type": "string",
                                "description": "Web URL to access the file"
                            }
                        },
                        "required": ["id", "name"]
                    },
                    "result": {
                        "type": "boolean",
                        "description": "Whether the operation was successful"
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if the operation failed"
                    }
                },
                "required": ["file", "metadata", "result"]
            }
        },
        "create_draft_email": {
            "display_name": "Create Draft Email",
            "description": "Create a draft email message that can be sent later",
            "input_schema": {
                "type": "object",
                "properties": {
                    "subject": {
                        "type": "string",
                        "description": "Email subject line"
                    },
                    "body": {
                        "type": "string",
                        "description": "Email body content"
                    },
                    "body_type": {
                        "type": "string",
                        "enum": ["Text", "HTML"],
                        "description": "Content type of the email body",
                        "default": "Text"
                    },
                    "to_recipients": {
                        "type": "array",
                        "description": "List of email recipients",
                        "items": {
                            "oneOf": [
                                {"type": "string"},
                                {
                                    "type": "object",
                                    "properties": {
                                        "address": {"type": "string"},
                                        "name": {"type": "string"}
                                    },
                                    "required": ["address"]
                                }
                            ]
                        }
                    },
                    "cc_recipients": {
                        "type": "array",
                        "description": "List of CC recipients",
                        "items": {
                            "oneOf": [
                                {"type": "string"},
                                {
                                    "type": "object",
                                    "properties": {
                                        "address": {"type": "string"},
                                        "name": {"type": "string"}
                                    },
                                    "required": ["address"]
                                }
                            ]
                        }
                    },
                    "bcc_recipients": {
                        "type": "array",
                        "description": "List of BCC recipients",
                        "items": {
                            "oneOf": [
                                {"type": "string"},
                                {
                                    "type": "object",
                                    "properties": {
                                        "address": {"type": "string"},
                                        "name": {"type": "string"}
                                    },
                                    "required": ["address"]
                                }
                            ]
                        }
                    },
                    "importance": {
                        "type": "string",
                        "enum": ["Low", "Normal", "High"],
                        "description": "Email importance level",
                        "default": "Normal"
                    }
                },
                "required": ["subject", "body", "to_recipients"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "boolean",
                        "description": "Whether the draft was created successfully"
                    },
                    "draft_id": {
                        "type": "string",
                        "description": "ID of the created draft"
                    },
                    "subject": {
                        "type": "string",
                        "description": "Subject of the draft"
                    },
                    "created_datetime": {
                        "type": "string",
                        "description": "When the draft was created"
                    },
                    "is_draft": {
                        "type": "boolean",
                        "description": "Whether this is a draft message"
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if the operation failed"
                    }
                },
                "required": ["result"]
            }
        },
        "send_draft_email": {
            "display_name": "Send Draft Email",
            "description": "Send a previously created draft email",
            "input_schema": {
                "type": "object",
                "properties": {
                    "draft_id": {
                        "type": "string",
                        "description": "ID of the draft to send"
                    }
                },
                "required": ["draft_id"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "boolean",
                        "description": "Whether the draft was sent successfully"
                    },
                    "draft_id": {
                        "type": "string",
                        "description": "ID of the sent draft"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the operation"
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if the operation failed"
                    }
                },
                "required": ["result", "draft_id"]
            }
        },
        "reply_to_email": {
            "display_name": "Reply to Email",
            "description": "Reply to an existing email message",
            "input_schema": {
                "type": "object",
                "properties": {
                    "message_id": {
                        "type": "string",
                        "description": "ID of the message to reply to"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Reply message text"
                    }
                },
                "required": ["message_id"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "boolean",
                        "description": "Whether the reply was sent successfully"
                    },
                    "message_id": {
                        "type": "string",
                        "description": "ID of the original message"
                    },
                    "operation": {
                        "type": "string",
                        "description": "Type of operation performed"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the operation"
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if the operation failed"
                    }
                },
                "required": ["result", "message_id", "operation"]
            }
        },
        "forward_email": {
            "display_name": "Forward Email",
            "description": "Forward an existing email message to other recipients",
            "input_schema": {
                "type": "object",
                "properties": {
                    "message_id": {
                        "type": "string",
                        "description": "ID of the message to forward"
                    },
                    "to_recipients": {
                        "type": "array",
                        "description": "List of recipients to forward to",
                        "items": {
                            "oneOf": [
                                {"type": "string"},
                                {
                                    "type": "object",
                                    "properties": {
                                        "address": {"type": "string"},
                                        "name": {"type": "string"}
                                    },
                                    "required": ["address"]
                                }
                            ]
                        }
                    },
                    "comment": {
                        "type": "string",
                        "description": "Additional message text to include"
                    }
                },
                "required": ["message_id", "to_recipients"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "boolean",
                        "description": "Whether the forward was sent successfully"
                    },
                    "message_id": {
                        "type": "string",
                        "description": "ID of the original message"
                    },
                    "operation": {
                        "type": "string",
                        "description": "Type of operation performed"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the operation"
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if the operation failed"
                    }
                },
                "required": ["result", "message_id", "operation"]
            }
        },
        "download_email_attachment": {
            "display_name": "Download Email Attachment",
            "description": "Download the content of an email attachment",
            "input_schema": {
                "type": "object",
                "properties": {
                    "message_id": {
                        "type": "string",
                        "description": "ID of the message containing the attachment"
                    },
                    "attachment_id": {
                        "type": "string",
                        "description": "ID of the attachment to download"
                    },
                    "include_content": {
                        "type": "boolean",
                        "description": "Whether to include attachment content",
                        "default": true
                    }
                },
                "required": ["message_id", "attachment_id"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "file": {
                        "type": "object",
                        "properties": {
                            "content": {
                                "type": "string",
                                "description": "Base64 encoded attachment content"
                            },
                            "name": {
                                "type": "string",
                                "description": "Attachment filename"
                            },
                            "contentType": {
                                "type": "string",
                                "description": "MIME type of the attachment"
                            }
                        },
                        "required": ["content", "name", "contentType"]
                    },
                    "metadata": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "Attachment ID"
                            },
                            "name": {
                                "type": "string",
                                "description": "Attachment filename"
                            },
                            "size": {
                                "type": "integer",
                                "description": "File size in bytes"
                            },
                            "contentType": {
                                "type": "string",
                                "description": "MIME type of the attachment"
                            },
                            "message_id": {
                                "type": "string",
                                "description": "ID of the message containing this attachment"
                            },
                            "is_inline": {
                                "type": "boolean",
                                "description": "Whether attachment is inline"
                            }
                        },
                        "required": ["id", "name", "size", "contentType", "message_id", "is_inline"]
                    },
                    "result": {
                        "type": "boolean",
                        "description": "Whether the operation was successful"
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if the operation failed"
                    }
                },
                "required": ["file", "metadata", "result"]
            }
        },
        "search_emails": {
            "display_name": "Search Emails",
            "description": "Search for emails using natural language queries",
            "input_schema": {
                "type": "object",
                "properties": {
                    "query": {
                        "type": "string",
                        "description": "Search query to find emails (searches body, sender, subject, and attachments)"
                    },
                    "limit": {
                        "type": "integer",
                        "description": "Maximum number of results to return",
                        "default": 25,
                        "maximum": 1000
                    },
                    "enable_top_results": {
                        "type": "boolean",
                        "description": "Enable relevance-based ranking for top results",
                        "default": false
                    }
                },
                "required": ["query"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "boolean",
                        "description": "Whether the search was successful"
                    },
                    "query": {
                        "type": "string",
                        "description": "The search query that was executed"
                    },
                    "total_results": {
                        "type": "integer",
                        "description": "Total number of matching emails found"
                    },
                    "messages": {
                        "type": "array",
                        "description": "List of matching email messages",
                        "items": {
                            "type": "object",
                            "properties": {
                                "message_id": {
                                    "type": "string",
                                    "description": "Message ID"
                                },
                                "subject": {
                                    "type": "string",
                                    "description": "Email subject"
                                },
                                "sender": {
                                    "type": "object",
                                    "description": "Sender information"
                                },
                                "received_datetime": {
                                    "type": "string",
                                    "description": "When the email was received"
                                },
                                "body_preview": {
                                    "type": "string",
                                    "description": "Preview of email body"
                                },
                                "has_attachments": {
                                    "type": "boolean",
                                    "description": "Whether email has attachments"
                                }
                            }
                        }
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if the operation failed"
                    }
                },
                "required": ["result", "query", "total_results", "messages"]
            }
        },
        "search_sharepoint_sites": {
            "display_name": "Search SharePoint Sites",
            "description": "Search for SharePoint sites across the organization",
            "input_schema": {
                "type": "object",
                "properties": {
                    "query": {
                        "type": "string",
                        "description": "Search query to find SharePoint sites"
                    },
                    "order_by_created": {
                        "type": "boolean",
                        "description": "Order results by creation date (newest first)",
                        "default": false
                    }
                },
                "required": ["query"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "boolean",
                        "description": "Whether the search was successful"
                    },
                    "query": {
                        "type": "string",
                        "description": "The search query that was executed"
                    },
                    "sites": {
                        "type": "array",
                        "description": "List of matching SharePoint sites",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "Unique site identifier"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Site name"
                                },
                                "display_name": {
                                    "type": "string",
                                    "description": "Site display name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Site description"
                                },
                                "web_url": {
                                    "type": "string",
                                    "description": "Web URL to access the site"
                                },
                                "created_datetime": {
                                    "type": "string",
                                    "description": "When the site was created"
                                },
                                "last_modified_datetime": {
                                    "type": "string",
                                    "description": "When the site was last modified"
                                }
                            }
                        }
                    },
                    "total_sites": {
                        "type": "integer",
                        "description": "Total number of sites found"
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if the operation failed"
                    }
                },
                "required": ["result", "query", "sites", "total_sites"]
            }
        },
        "get_sharepoint_site_details": {
            "display_name": "Get SharePoint Site Details",
            "description": "Get detailed information about a specific SharePoint site",
            "input_schema": {
                "type": "object",
                "properties": {
                    "site_id": {
                        "type": "string",
                        "description": "The ID of the SharePoint site"
                    }
                },
                "required": ["site_id"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "boolean",
                        "description": "Whether the operation was successful"
                    },
                    "site": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "Unique site identifier"
                            },
                            "display_name": {
                                "type": "string",
                                "description": "Site display name"
                            },
                            "name": {
                                "type": "string",
                                "description": "Site name"
                            },
                            "description": {
                                "type": "string",
                                "description": "Site description"
                            },
                            "web_url": {
                                "type": "string",
                                "description": "Web URL to access the site"
                            },
                            "created_datetime": {
                                "type": "string",
                                "description": "When the site was created"
                            },
                            "last_modified_datetime": {
                                "type": "string",
                                "description": "When the site was last modified"
                            },
                            "is_personal_site": {
                                "type": "boolean",
                                "description": "Whether this is a personal site"
                            }
                        },
                        "required": ["id", "name", "web_url"]
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if the operation failed"
                    }
                },
                "required": ["result", "site"]
            }
        },
        "list_sharepoint_libraries": {
            "display_name": "List SharePoint Document Libraries",
            "description": "List all document libraries (drives) in a SharePoint site",
            "input_schema": {
                "type": "object",
                "properties": {
                    "site_id": {
                        "type": "string",
                        "description": "The ID of the SharePoint site"
                    },
                    "limit": {
                        "type": "integer",
                        "description": "Maximum number of libraries to return"
                    },
                    "select_fields": {
                        "type": "string",
                        "description": "Comma-separated list of fields to return"
                    }
                },
                "required": ["site_id"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "boolean",
                        "description": "Whether the operation was successful"
                    },
                    "site_id": {
                        "type": "string",
                        "description": "The SharePoint site ID"
                    },
                    "libraries": {
                        "type": "array",
                        "description": "List of document libraries",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "Library (drive) ID"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Library name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Library description"
                                },
                                "drive_type": {
                                    "type": "string",
                                    "description": "Type of drive (documentLibrary)"
                                },
                                "web_url": {
                                    "type": "string",
                                    "description": "Web URL to access the library"
                                },
                                "created_datetime": {
                                    "type": "string",
                                    "description": "When the library was created"
                                },
                                "last_modified_datetime": {
                                    "type": "string",
                                    "description": "When the library was last modified"
                                }
                            }
                        }
                    },
                    "total_libraries": {
                        "type": "integer",
                        "description": "Total number of libraries found"
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if the operation failed"
                    }
                },
                "required": ["result", "site_id", "libraries", "total_libraries"]
            }
        },
        "search_sharepoint_documents": {
            "display_name": "Search SharePoint Documents",
            "description": "Search for documents within a SharePoint site's document libraries",
            "input_schema": {
                "type": "object",
                "properties": {
                    "site_id": {
                        "type": "string",
                        "description": "The ID of the SharePoint site"
                    },
                    "query": {
                        "type": "string",
                        "description": "Search query to find documents"
                    },
                    "limit": {
                        "type": "integer",
                        "description": "Maximum number of documents to return",
                        "default": 10
                    }
                },
                "required": ["site_id", "query"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "boolean",
                        "description": "Whether the search was successful"
                    },
                    "site_id": {
                        "type": "string",
                        "description": "The SharePoint site ID"
                    },
                    "query": {
                        "type": "string",
                        "description": "The search query that was executed"
                    },
                    "files": {
                        "type": "array",
                        "description": "List of matching documents",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "Document ID"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Document name"
                                },
                                "size": {
                                    "type": "integer",
                                    "description": "File size in bytes"
                                },
                                "lastModifiedDateTime": {
                                    "type": "string",
                                    "description": "When the document was last modified"
                                },
                                "webUrl": {
                                    "type": "string",
                                    "description": "Web URL to access the document"
                                },
                                "drive_id": {
                                    "type": "string",
                                    "description": "ID of the document library (drive) containing this document"
                                },
                                "drive_name": {
                                    "type": "string",
                                    "description": "Name of the document library (drive) containing this document"
                                }
                            }
                        }
                    },
                    "total_files": {
                        "type": "integer",
                        "description": "Total number of documents found"
                    },
                    "drives_searched": {
                        "type": "integer",
                        "description": "Number of document libraries searched"
                    },
                    "total_drives": {
                        "type": "integer",
                        "description": "Total number of document libraries in the site"
                    },
                    "search_errors": {
                        "type": "array",
                        "description": "List of errors encountered while searching specific drives",
                        "items": {
                            "type": "string"
                        }
                    },
                    "message": {
                        "type": "string",
                        "description": "Additional message about the search results"
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if the operation failed"
                    }
                },
                "required": ["result", "site_id", "query", "files", "total_files"]
            }
        },
        "read_sharepoint_document": {
            "display_name": "Read SharePoint Document Content",
            "description": "Read the content of a SharePoint document with automatic PDF conversion for Office documents",
            "input_schema": {
                "type": "object",
                "properties": {
                    "site_id": {
                        "type": "string",
                        "description": "The ID of the SharePoint site"
                    },
                    "file_id": {
                        "type": "string",
                        "description": "The ID of the file to read"
                    },
                    "drive_id": {
                        "type": "string",
                        "description": "Optional: The ID of the specific document library (drive) containing the file. If not provided, uses the site's default drive."
                    }
                },
                "required": ["site_id", "file_id"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "file": {
                        "type": "object",
                        "properties": {
                            "content": {
                                "type": "string",
                                "description": "Base64 encoded file content"
                            },
                            "name": {
                                "type": "string",
                                "description": "The name of the file"
                            },
                            "contentType": {
                                "type": "string",
                                "description": "Content type of the returned file"
                            }
                        },
                        "required": ["content", "name", "contentType"]
                    },
                    "metadata": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "The ID of the file"
                            },
                            "name": {
                                "type": "string",
                                "description": "The name of the file"
                            },
                            "size": {
                                "type": "integer",
                                "description": "File size in bytes"
                            },
                            "mimeType": {
                                "type": "string",
                                "description": "The original MIME type of the file"
                            },
                            "webUrl": {
                                "type": "string",
                                "description": "Web URL to access the file"
                            },
                            "site_id": {
                                "type": "string",
                                "description": "The SharePoint site ID"
                            },
                            "drive_id": {
                                "type": "string",
                                "description": "The ID of the document library (drive) containing the file"
                            }
                        },
                        "required": ["id", "name", "site_id"]
                    },
                    "result": {
                        "type": "boolean",
                        "description": "Whether the operation was successful"
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if the operation failed"
                    }
                },
                "required": ["file", "metadata", "result"]
            }
        },
        "list_sharepoint_pages": {
            "display_name": "List SharePoint Site Pages",
            "description": "List all pages in a SharePoint site",
            "input_schema": {
                "type": "object",
                "properties": {
                    "site_id": {
                        "type": "string",
                        "description": "The ID of the SharePoint site"
                    },
                    "limit": {
                        "type": "integer",
                        "description": "Maximum number of pages to return"
                    },
                    "order_by": {
                        "type": "string",
                        "description": "Order by field (e.g., 'createdDateTime desc')"
                    },
                    "select_fields": {
                        "type": "string",
                        "description": "Comma-separated list of fields to return"
                    }
                },
                "required": ["site_id"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "boolean",
                        "description": "Whether the operation was successful"
                    },
                    "site_id": {
                        "type": "string",
                        "description": "The SharePoint site ID"
                    },
                    "pages": {
                        "type": "array",
                        "description": "List of site pages",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "Page ID"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Page filename"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Page title"
                                },
                                "web_url": {
                                    "type": "string",
                                    "description": "Web URL to access the page"
                                },
                                "page_layout": {
                                    "type": "string",
                                    "description": "Page layout type"
                                },
                                "created_datetime": {
                                    "type": "string",
                                    "description": "When the page was created"
                                },
                                "last_modified_datetime": {
                                    "type": "string",
                                    "description": "When the page was last modified"
                                }
                            }
                        }
                    },
                    "total_pages": {
                        "type": "integer",
                        "description": "Total number of pages found"
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if the operation failed"
                    }
                },
                "required": ["result", "site_id", "pages", "total_pages"]
            }
        },
        "read_sharepoint_page_content": {
            "display_name": "Read SharePoint Page Content",
            "description": "Read the content and metadata of a SharePoint site page",
            "input_schema": {
                "type": "object",
                "properties": {
                    "site_id": {
                        "type": "string",
                        "description": "The ID of the SharePoint site"
                    },
                    "page_id": {
                        "type": "string",
                        "description": "The ID of the page to read"
                    },
                    "include_content": {
                        "type": "boolean",
                        "description": "Whether to include page content and web parts",
                        "default": true
                    }
                },
                "required": ["site_id", "page_id"]
            },
            "output_schema": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "boolean",
                        "description": "Whether the operation was successful"
                    },
                    "site_id": {
                        "type": "string",
                        "description": "The SharePoint site ID"
                    },
                    "page": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "Page ID"
                            },
                            "name": {
                                "type": "string",
                                "description": "Page filename"
                            },
                            "title": {
                                "type": "string",
                                "description": "Page title"
                            },
                            "web_url": {
                                "type": "string",
                                "description": "Web URL to access the page"
                            },
                            "page_layout": {
                                "type": "string",
                                "description": "Page layout type"
                            },
                            "created_datetime": {
                                "type": "string",
                                "description": "When the page was created"
                            },
                            "last_modified_datetime": {
                                "type": "string",
                                "description": "When the page was last modified"
                            },
                            "content": {
                                "type": "object",
                                "description": "Page content structure with web parts (only present if include_content=true)"
                            }
                        },
                        "required": ["id", "name", "title", "web_url"]
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if the operation failed"
                    }
                },
                "required": ["result", "site_id", "page"]
            }
        }
    }
}