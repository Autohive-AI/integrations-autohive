{
  "name": "Google Sheets",
  "display_name": "Google Sheets",
  "version": "0.1.0",
  "entry_point": "google_sheets.py",
  "description": "Read and write Google Sheets with safe, deterministic operations and basic formatting.",
  "auth": {
    "type": "platform",
    "provider": "Google Sheets",
    "scopes": [
      "https://www.googleapis.com/auth/spreadsheets",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.readonly"
    ]
  },
  "actions": {
    "sheets_list_spreadsheets": {
      "display_name": "List Spreadsheets",
      "description": "Find accessible spreadsheets. Supports filtering by name and owner.",
      "input_schema": {
        "type": "object",
        "properties": {
          "name_contains": {
            "type": "string",
            "description": "Filter spreadsheets whose name contains this string."
          },
          "owner": {
            "type": "string",
            "description": "Email of owner to filter, or 'me'."
          },
          "pageSize": { "type": "integer" },
          "pageToken": { "type": "string" }
        }
      },
      "output_schema": {
        "type": "object",
        "properties": {
          "files": { "type": "array", "items": { "type": "object" } },
          "nextPageToken": { "type": "string" },
          "result": { "type": "boolean" },
          "error": { "type": "string" }
        },
        "required": ["files", "result"]
      }
    },
    "sheets_get_spreadsheet": {
      "display_name": "Get Spreadsheet Metadata",
      "description": "Fetch spreadsheet properties, sheets, and named ranges.",
      "input_schema": {
        "type": "object",
        "properties": {
          "spreadsheet_id": { "type": "string" },
          "include_grid_data": {
            "type": "boolean",
            "description": "If true, returns cell data (may be large)."
          }
        },
        "required": ["spreadsheet_id"]
      },
      "output_schema": {
        "type": "object",
        "properties": {
          "spreadsheet": { "type": "object" },
          "result": { "type": "boolean" },
          "error": { "type": "string" }
        },
        "required": ["spreadsheet", "result"]
      }
    },
    "sheets_list_sheets": {
      "display_name": "List Sheets",
      "description": "List sheet tabs with basic properties.",
      "input_schema": {
        "type": "object",
        "properties": {
          "spreadsheet_id": { "type": "string" }
        },
        "required": ["spreadsheet_id"]
      },
      "output_schema": {
        "type": "object",
        "properties": {
          "sheets": { "type": "array", "items": { "type": "object" } },
          "result": { "type": "boolean" },
          "error": { "type": "string" }
        },
        "required": ["sheets", "result"]
      }
    },
    "sheets_read_range": {
      "display_name": "Read Range",
      "description": "Read values and types from an A1 range.",
      "input_schema": {
        "type": "object",
        "properties": {
          "spreadsheet_id": { "type": "string" },
          "range": {
            "type": "string",
            "description": "A1 range or named range."
          },
          "valueRenderOption": {
            "type": "string",
            "enum": ["FORMATTED_VALUE", "UNFORMATTED_VALUE", "FORMULA"]
          },
          "dateTimeRenderOption": {
            "type": "string",
            "enum": ["SERIAL_NUMBER", "FORMATTED_STRING"]
          }
        },
        "required": ["spreadsheet_id", "range"]
      },
      "output_schema": {
        "type": "object",
        "properties": {
          "range": { "type": "string" },
          "values": {
            "type": "array",
            "items": {
              "type": "array",
              "items": { "type": ["string", "number", "boolean", "null"] }
            }
          },
          "result": { "type": "boolean" },
          "error": { "type": "string" }
        },
        "required": ["range", "values", "result"]
      }
    },
    "sheets_write_range": {
      "display_name": "Write Range",
      "description": "Overwrite cells in a given A1 range deterministically.",
      "input_schema": {
        "type": "object",
        "properties": {
          "spreadsheet_id": { "type": "string" },
          "range": { "type": "string" },
          "values": {
            "type": "array",
            "items": {
              "type": "array",
              "items": { "type": ["string", "number", "boolean", "null"] }
            }
          },
          "inputOption": { "type": "string", "enum": ["RAW", "USER_ENTERED"] },
          "dry_run": { "type": "boolean" }
        },
        "required": ["spreadsheet_id", "range", "values"]
      },
      "output_schema": {
        "type": "object",
        "properties": {
          "updatedRange": { "type": "string" },
          "updatedRows": { "type": "integer" },
          "updatedColumns": { "type": "integer" },
          "updatedCells": { "type": "integer" },
          "dryRun": { "type": "boolean" },
          "result": { "type": "boolean" },
          "error": { "type": "string" }
        },
        "required": ["result"]
      }
    },
    "sheets_append_rows": {
      "display_name": "Append Rows",
      "description": "Append rows to a table or range.",
      "input_schema": {
        "type": "object",
        "properties": {
          "spreadsheet_id": { "type": "string" },
          "range": {
            "type": "string",
            "description": "A1 of header row or target sheet name."
          },
          "rows": {
            "type": "array",
            "items": {
              "type": "array",
              "items": { "type": ["string", "number", "boolean", "null"] }
            }
          },
          "inputOption": { "type": "string", "enum": ["RAW", "USER_ENTERED"] }
        },
        "required": ["spreadsheet_id", "range", "rows"]
      },
      "output_schema": {
        "type": "object",
        "properties": {
          "updates": { "type": "object" },
          "result": { "type": "boolean" },
          "error": { "type": "string" }
        },
        "required": ["result"]
      }
    },
    "sheets_format_range": {
      "display_name": "Format Range",
      "description": "Apply font, color, and number formatting to a range (grid range required).",
      "input_schema": {
        "type": "object",
        "properties": {
          "spreadsheet_id": { "type": "string" },
          "sheetId": { "type": "integer" },
          "gridRange": {
            "type": "object",
            "description": "GridRange with start/end row/col indices (0-based, end exclusive).",
            "properties": {
              "startRowIndex": { "type": "integer" },
              "endRowIndex": { "type": "integer" },
              "startColumnIndex": { "type": "integer" },
              "endColumnIndex": { "type": "integer" }
            }
          },
          "style": {
            "type": "object",
            "description": "userEnteredFormat object per Sheets API."
          }
        },
        "required": ["spreadsheet_id", "sheetId", "gridRange", "style"]
      },
      "output_schema": {
        "type": "object",
        "properties": {
          "replies": { "type": "array", "items": { "type": "object" } },
          "result": { "type": "boolean" },
          "error": { "type": "string" }
        },
        "required": ["result"]
      }
    },
    "sheets_freeze": {
      "display_name": "Freeze Panes",
      "description": "Freeze header rows/columns.",
      "input_schema": {
        "type": "object",
        "properties": {
          "spreadsheet_id": { "type": "string" },
          "sheetId": { "type": "integer" },
          "rows": { "type": "integer" },
          "columns": { "type": "integer" }
        },
        "required": ["spreadsheet_id", "sheetId"]
      },
      "output_schema": {
        "type": "object",
        "properties": {
          "replies": { "type": "array", "items": { "type": "object" } },
          "result": { "type": "boolean" },
          "error": { "type": "string" }
        },
        "required": ["result"]
      }
    },
    "sheets_batch_update": {
      "display_name": "Batch Update",
      "description": "Run a batchUpdate with one or more requests.",
      "input_schema": {
        "type": "object",
        "properties": {
          "spreadsheet_id": { "type": "string" },
          "requests": { "type": "array", "items": { "type": "object" } },
          "dry_run": { "type": "boolean" }
        },
        "required": ["spreadsheet_id", "requests"]
      },
      "output_schema": {
        "type": "object",
        "properties": {
          "replies": { "type": "array", "items": { "type": "object" } },
          "dryRun": { "type": "boolean" },
          "result": { "type": "boolean" },
          "error": { "type": "string" }
        },
        "required": ["result"]
      }
    },
    "sheets_duplicate_spreadsheet": {
      "display_name": "Duplicate Spreadsheet (Drive Copy)",
      "description": "Duplicate an entire spreadsheet file using Drive API.",
      "input_schema": {
        "type": "object",
        "properties": {
          "source_spreadsheet_id": {
            "type": "string",
            "description": "The spreadsheet ID to copy."
          },
          "new_title": {
            "type": "string",
            "description": "Title of the new copy."
          },
          "parent_folder_id": {
            "type": "string",
            "description": "Optional destination folder ID."
          }
        },
        "required": ["source_spreadsheet_id", "new_title"]
      },
      "output_schema": {
        "type": "object",
        "properties": {
          "file_metadata": {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "name": { "type": "string" },
              "mimeType": { "type": "string" },
              "parents": { "type": "array", "items": { "type": "string" } },
              "webViewLink": { "type": "string" }
            }
          },
          "result": { "type": "boolean" },
          "error": { "type": "string" }
        },
        "required": ["file_metadata", "result"]
      }
    }
  }
}
